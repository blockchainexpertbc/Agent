[{"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\index.js":"1","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\reportWebVitals.js":"2","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\App.js":"3","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\store.js":"4","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\context\\ThemeContext.js":"5","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\selectors\\AuthSelectors.js":"6","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\index.js":"7","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\services\\AuthService.js":"8","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\ForgotPassword.js":"9","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Registration.js":"10","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Login.js":"11","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\AuthReducer.js":"12","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\PostsReducer.js":"13","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\Reducers.js":"14","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error400.js":"15","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\LockScreen.js":"16","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error404.js":"17","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error403.js":"18","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error500.js":"19","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error503.js":"20","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\ScrollToTop.js":"21","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\Footer.js":"22","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\AuthActions.js":"23","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Loader\\Loader.js":"24","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\PostTypes.js":"25","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\UseInterval.js":"26","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\constance\\index.js":"27","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\index.js":"28","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js":"29","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\Line4.js":"30","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js":"31","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Header.js":"32","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\NavHader.js":"33","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\SideBar.js":"34","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Logout.js":"35","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Processes.js":"36","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Users.js":"37","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Companies.js":"38","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Home.js":"39","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\MetarialDate.js":"40","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Agents.js":"41","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\CompanyProfile.js":"42","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\PageTitle.js":"43","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\AuthHeader.js":"44"},{"size":812,"mtime":1640742771990,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1618627410000,"results":"47","hashOfConfig":"46"},{"size":2634,"mtime":1640855835874,"results":"48","hashOfConfig":"46"},{"size":1680,"mtime":1638103325516,"results":"49","hashOfConfig":"46"},{"size":1906,"mtime":1635618112000,"results":"50","hashOfConfig":"46"},{"size":106,"mtime":1637659025173,"results":"51","hashOfConfig":"46"},{"size":3334,"mtime":1640841016045,"results":"52","hashOfConfig":"46"},{"size":2485,"mtime":1638343286577,"results":"53","hashOfConfig":"46"},{"size":2098,"mtime":1637661486642,"results":"54","hashOfConfig":"46"},{"size":6401,"mtime":1640757242786,"results":"55","hashOfConfig":"46"},{"size":12084,"mtime":1640848063952,"results":"56","hashOfConfig":"46"},{"size":1799,"mtime":1626565210000,"results":"57","hashOfConfig":"46"},{"size":1666,"mtime":1616829806000,"results":"58","hashOfConfig":"46"},{"size":1054,"mtime":1626222696000,"results":"59","hashOfConfig":"46"},{"size":1081,"mtime":1629509612000,"results":"60","hashOfConfig":"46"},{"size":1741,"mtime":1635627396000,"results":"61","hashOfConfig":"46"},{"size":1036,"mtime":1629509606000,"results":"62","hashOfConfig":"46"},{"size":955,"mtime":1629509608000,"results":"63","hashOfConfig":"46"},{"size":1093,"mtime":1629509602000,"results":"64","hashOfConfig":"46"},{"size":1089,"mtime":1629509598000,"results":"65","hashOfConfig":"46"},{"size":256,"mtime":1606273284000,"results":"66","hashOfConfig":"46"},{"size":202,"mtime":1637423379484,"results":"67","hashOfConfig":"46"},{"size":2735,"mtime":1640935675436,"results":"68","hashOfConfig":"46"},{"size":155,"mtime":1629425976000,"results":"69","hashOfConfig":"46"},{"size":503,"mtime":1616829806000,"results":"70","hashOfConfig":"46"},{"size":472,"mtime":1640757337152,"results":"71","hashOfConfig":"46"},{"size":745,"mtime":1640742462519,"results":"72","hashOfConfig":"46"},{"size":875,"mtime":1637231965852,"results":"73","hashOfConfig":"46"},{"size":4828,"mtime":1635376628000,"results":"74","hashOfConfig":"46"},{"size":2326,"mtime":1635475068000,"results":"75","hashOfConfig":"46"},{"size":1865,"mtime":1635376638000,"results":"76","hashOfConfig":"46"},{"size":805,"mtime":1640928125539,"results":"77","hashOfConfig":"46"},{"size":892,"mtime":1635620620000,"results":"78","hashOfConfig":"46"},{"size":4456,"mtime":1640933226939,"results":"79","hashOfConfig":"46"},{"size":1376,"mtime":1640742552971,"results":"80","hashOfConfig":"46"},{"size":20844,"mtime":1640932087181,"results":"81","hashOfConfig":"46"},{"size":20527,"mtime":1640920438183,"results":"82","hashOfConfig":"46"},{"size":21392,"mtime":1640916436284,"results":"83","hashOfConfig":"46"},{"size":44727,"mtime":1640757284201,"results":"84","hashOfConfig":"46"},{"size":521,"mtime":1640834499010,"results":"85","hashOfConfig":"46"},{"size":23237,"mtime":1640925860698,"results":"86","hashOfConfig":"46"},{"size":49999,"mtime":1640934593335,"results":"87","hashOfConfig":"46"},{"size":604,"mtime":1637015674823,"results":"88","hashOfConfig":"46"},{"size":299,"mtime":1640755240185,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"16dmldy",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"185","usedDeprecatedRules":"92"},"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\index.js",[],["186","187"],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\reportWebVitals.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\App.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\store.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\context\\ThemeContext.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\selectors\\AuthSelectors.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\services\\AuthService.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\ForgotPassword.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Registration.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Login.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\AuthReducer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\PostsReducer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\Reducers.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error400.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\LockScreen.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error404.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error403.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error500.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error503.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\ScrollToTop.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\Footer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\AuthActions.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Loader\\Loader.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\PostTypes.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\UseInterval.js",["188"],"﻿import { useEffect, useRef } from 'react'\r\n\r\nexport function useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n  \r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t  savedCallback.current = callback;\r\n\t}, [callback]);\r\n  \r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t  function tick() {\r\n\t\tsavedCallback.current();\r\n\t  }\r\n\t  if (delay !== null) {\r\n\t\tlet id = setInterval(tick, delay);\r\n\t\treturn () => clearInterval(id);\r\n\t  }\r\n\t}, [delay]);\r\n}","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\constance\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js",[],["189","190"],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\Line4.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Header.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\NavHader.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\SideBar.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Logout.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Processes.js",["191","192","193","194","195"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {  Pagination, Badge, Dropdown, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { BASE_URL, storage } from \"../../constance/index.js\";\r\nimport axios from 'axios'\r\nimport { useInterval } from \"../components/UseInterval.js\";\r\nimport { uploadBytes, ref, getDownloadURL } from 'firebase/storage';\r\nimport authHeader from \"../components/AuthHeader.js\";\r\nimport swal from \"sweetalert\";\r\nimport profile from \"../../images/sidebarIcon.png\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst StatusComponent = ({state}) => {\r\n   switch (state) {\r\n      case 0:\r\n         return <Badge variant=\"success light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Current\r\n         </Badge>\r\n      case 1:\r\n         return <Badge variant=\"danger light\">\r\n            <i className=\"fa fa-circle text-danger mrmr-1\"></i>\r\n            Always\r\n         </Badge>\r\n      case 2:\r\n         return <Badge variant=\"warning light\">\r\n            <i className=\"fa fa-circle text-warning mr-1\"></i>\r\n            Global\r\n         </Badge>\r\n   \r\n      default:\r\n           return <Badge variant=\"success light\">\r\n               <i className=\"fa fa-circle text-success mr-1\"></i>\r\n               Current\r\n           </Badge>\r\n   }\r\n}\r\nconst Processes = () => {\r\n\r\n    const [ processes, setProcesses ] = useState([])\r\n    const [ filteredProcesses, setFilteredProcesses ] = useState([]);\r\n    const [ currentPage, setCurrentPage ] = useState(0);\r\n    const [ byFilter, setByFilter ] = useState(100);\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [label, setLabel] = useState(\"\");\r\n    const [file, setFile] = useState(\"\")\r\n    const params = useParams();\r\n    const user = useSelector(state => state.auth.auth);\r\n\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n        if (params.agentId === \"-2\") {\r\n            axios.get(`${BASE_URL}/api/process/bycompanyid/${user.companyId}`, { headers: authHeader() })\r\n                .then(res => {\r\n                    setProcesses(res.data);\r\n                });\r\n            return;\r\n        }\r\n\r\n        axios.get(`${BASE_URL}/api/process/${params.agentId}`, { headers: authHeader() })\r\n            .then(res => {\r\n                setProcesses(res.data);\r\n            });\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        if (params.agentId === \"-1\" || params.agentId === \"-2\") return;\r\n        axios.get(`${BASE_URL}/api/process/${params.agentId}`, { headers: authHeader() })\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setProcesses(res.data);\r\n            });\r\n    }, 5000)\r\n\r\n    useEffect(() => {\r\n\r\n        let cnt = processes.length > sort ? sort : (processes.length - currentPage * sort);\r\n        setFilteredProcesses(processes.filter(o => byFilter === 100 ? true : byFilter === 2 ? o.target === byFilter : o.target === byFilter && o.agentId === params.agentId).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [processes, currentPage, byFilter])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(processes.filter(o => byFilter === 100 ? true : byFilter === 2 ? o.target === byFilter : o.target === byFilter && o.agentId === params.agentId).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n\r\n    }, [filteredProcesses])\r\n\r\n \r\n    const onSetProcessState = (action, process) => {\r\n        process.action = action;\r\n\r\n        axios.put(`${BASE_URL}/api/process`, process)\r\n            .then(res => {\r\n                let changedProcess = processes.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n    const onSetProcessTarget = (target, process) => {\r\n        process.target = target;\r\n\r\n        axios.put(`${BASE_URL}/api/process`, process)\r\n            .then(res => {\r\n                let changedProcess = processes.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(`${BASE_URL}/api/process/${id}`, { headers: authHeader() })\r\n            .then(res => {\r\n                let changedProcess = processes.filter(p => p.id != id)\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n\r\n    const onSaveNewProcesse = () => {\r\n\r\n        let companyId = null;\r\n        let target = 1;\r\n        let agentId = params.agentId;\r\n        if (params.agentId === \"-1\") {\r\n            target = 2;\r\n            agentId = null;\r\n        }\r\n        if (params.agentId === \"-2\") {\r\n            target = 3;\r\n            agentId = null;\r\n            companyId = user.companyId;\r\n        }\r\n        const storageRef = ref(storage, `job-site-files/${file.name}`);\r\n\r\n\t\tuploadBytes(storageRef, file).then((snapshot) => {\r\n\t\t\tgetDownloadURL(snapshot.ref).then(url => {\r\n                let newProgram = {\r\n                    agentId, \r\n                    label,\r\n                    name,\r\n                    url,\r\n                    target,\r\n                    companyId,\r\n                    action: false\r\n                }\r\n\r\n                console.log(newProgram)\r\n                axios.post(`${BASE_URL}/api/process`, newProgram)\r\n                    .then(res => {\r\n                        swal(\"Process has been successfully created!\", \"\", \"success\");\r\n                        setProcesses([...processes, res.data]);\r\n                    });\r\n                setModalCentered(false)\r\n\t\t\t})\r\n\t\t})\r\n    }\r\n\r\n    const byFilterLabel = id => {\r\n        switch (id) {\r\n            case 0:\r\n                return 'Current';\r\n            case 1:\r\n                return 'Always';\r\n            case 2:\r\n                return 'Global';\r\n            default:\r\n                return 'All';\r\n        }\r\n    }\r\n\r\n   const [ modalCentered, setModalCentered ] = useState(false);\r\n   \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                     <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Add\r\n                     </Button>\r\n\r\n                     <Modal className=\"fade\" show={modalCentered}>\r\n                        <Modal.Header>\r\n                           <Modal.Title>New Program</Modal.Title>\r\n                           <Button\r\n                              onClick={() => setModalCentered(false)}\r\n                              variant=\"\"\r\n                              className=\"close\"\r\n                           >\r\n                              <span>&times;</span>\r\n                           </Button>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-3 col-form-label\">\r\n                                    Label\r\n                                </label>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={label}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter program label\"\r\n                                        onChange={e => setLabel(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-3 col-form-label\">\r\n                                    Program name\r\n                                </label>\r\n                                <div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={name}\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter program name\"\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-3 col-form-label\">\r\n                                    Image\r\n                                </label>\r\n                                <div className=\"input-group\">\r\n                              <div className=\"custom-file\">\r\n                                 <input\r\n                                    type=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                    onChange={e => setFile(e.target.files[0])}\r\n                                 />\r\n                                 <label className=\"custom-file-label\">\r\n                                    Choose file\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                           <Button\r\n                              onClick={() => setModalCentered(false)}\r\n                              variant=\"danger light\"\r\n                           >\r\n                              Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={onSaveNewProcesse}>Save</Button>\r\n                        </Modal.Footer>\r\n                     </Modal>\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Processes</h4>\r\n                {\r\n                    params.agentId !== '-1' &&\r\n                    <Dropdown className=\"dropdown mt-sm-0 mt-3\">\r\n                        <Dropdown.Toggle\r\n                            as=\"button\"\r\n                            variant=\"\"\r\n                            className=\"btn rounded border border-light dropdown-toggle\"\r\n                        >\r\n                            {byFilterLabel(byFilter)}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                            <Dropdown.Item onClick={() => setByFilter(100)}>All</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(0)}>Current</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(1)}>Always</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(2)}>Global</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                }\r\n            </div>\r\n            <div className=\"card-body\">\r\n               <Table responsive className=\"w-100\">\r\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                        <table id=\"example\" className=\"display w-100 dataTable\">\r\n                            <thead>\r\n                                <tr role=\"row\">\r\n                                    <th >\r\n                                        Label\r\n                                    </th>\r\n                                    <th>\r\n                                        Program name\r\n                                    </th>\r\n                                    <th>\r\n                                        Status\r\n                                    </th>\r\n                                    <th>\r\n                                        Type\r\n                                    </th>\r\n                                    <th>\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                     filteredProcesses\r\n                                    .map((a, i) => (\r\n                                        <tr key={i}>\r\n                                            <td>\r\n                                                <div className=\"media pt-3 pb-3\">\r\n                                                    <img\r\n                                                        src={a.url ? a.url : profile}\r\n                                                        alt=\"\"\r\n                                                        className=\"mr-3 rounded\"\r\n                                                        width={45}\r\n                                                    />\r\n                                                    <div className=\"media-body\">\r\n                                                        <h5 className=\"m-b-5\">\r\n                                                            <Link\r\n                                                                to=\"#\"\r\n                                                                className=\"text-black\"\r\n                                                            >\r\n                                                                {a.label}\r\n                                                            </Link>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                {a.name}\r\n                                            </td>\r\n                                            <td>\r\n                                                {a.action ? 'Hide' : 'Show'}\r\n                                            </td>\r\n                                            <td >\r\n                                                <StatusComponent state={ a.target }/>\r\n                                            </td>\r\n                                            <td>\r\n                                            <Link\r\n                                                to=\"#\"\r\n                                                style={{margin: \"5px\"}}\r\n                                                className=\"btn btn-primary shadow btn-xs sharp\"\r\n                                            >\r\n                                                <i className=\"fa fa-pencil\"></i>\r\n                                                </Link>\r\n                                                {\r\n                                                    a.action ?\r\n                                                        <Link\r\n                                                            to=\"#\"\r\n                                                            style={{ margin: \"5px\" }}\r\n                                                            className=\"btn btn-success shadow btn-xs sharp\"\r\n                                                            onClick={() => onSetProcessState(false, a)}\r\n                                                        >\r\n                                                            <i className=\"fa fa-check\"></i>\r\n                                                        </Link> :\r\n                                                        <Link\r\n                                                            to=\"#\"\r\n                                                            style={{ margin: \"5px\" }}\r\n                                                            className=\"btn btn-warning shadow btn-xs sharp\"\r\n                                                            onClick={() => onSetProcessState(true, a)}\r\n                                                        >\r\n                                                            <i className=\"fa fa-ban\"></i>\r\n                                                        </Link>\r\n\r\n                                                }\r\n                                            <Link\r\n                                                to=\"#\"\r\n                                                style={{margin: \"5px\"}}\r\n                                                className=\"btn btn-danger shadow btn-xs sharp\"\r\n                                                    onClick={e => onDelete(a.id)}\r\n                                            >\r\n                                                <i className=\"fa fa-trash\"></i>\r\n                                            </Link>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                            <div className=\"dataTables_info\">\r\n                                Showing {currentPage * sort + 1} to\r\n                                {filteredProcesses.length >\r\n                                    (currentPage + 1) * sort\r\n                                    ? filteredProcesses.length\r\n                                    : (currentPage + 1) * sort}\r\n                                of {processes.length} entries\r\n                            </div>\r\n                            <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                                <Pagination\r\n                                    className=\"pagination-primary pagination-circle\"\r\n                                    size=\"lg\"\r\n                                >\r\n                                    <li\r\n                                        className=\"page-item page-indicator \"\r\n                                        onClick={() =>\r\n                                            currentPage > 0 &&\r\n                                            setCurrentPage(currentPage - 1)\r\n                                        }\r\n                                    >\r\n                                        <Link className=\"page-link\" to=\"#\">\r\n                                            <i className=\"la la-angle-left\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                    {\r\n                                        paggination.map((number, i) => (\r\n                                            <Pagination.Item\r\n                                                className={\r\n                                                    currentPage === i ? \"active\" : \"\"\r\n                                                }\r\n                                                onClick={() => setCurrentPage(i)}\r\n                                                key={i}\r\n                                            >\r\n                                                {number}\r\n                                            </Pagination.Item>\r\n                                        ))\r\n                                    }\r\n                                    <li\r\n                                        className=\"page-item page-indicator\"\r\n                                        onClick={() =>\r\n                                            currentPage + 1 <\r\n                                            filteredProcesses &&\r\n                                            setCurrentPage(currentPage + 1)\r\n                                        }\r\n                                    >\r\n                                        <Link className=\"page-link\" to=\"#\">\r\n                                            <i className=\"la la-angle-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                </Pagination>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n               </Table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Processes;\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Users.js",["196","197","198","199","200"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { BASE_URL } from \"../../constance/index.js\";\r\nimport { Pagination, Button, Modal, Table, Badge } from \"react-bootstrap\";\r\nimport authHeader from \"../components/AuthHeader.js\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst StatusComponent = ({ state }) => {\r\n    switch (state) {\r\n        case true:\r\n            return <Badge variant=\"success light\">\r\n                <i className=\"fa fa-circle text-success mr-1\"></i>\r\n                Active\r\n            </Badge>\r\n        case false:\r\n            return <Badge variant=\"danger light\">\r\n                <i className=\"fa fa-circle text-danger mrmr-1\"></i>\r\n                Inactive\r\n            </Badge>\r\n\r\n        default:\r\n            return <Badge variant=\"success light\">\r\n                <i className=\"fa fa-circle text-success mr-1\"></i>\r\n                Active\r\n            </Badge>\r\n    }\r\n}\r\n\r\nexport default () => {\r\n\r\n    const [users, setUsers] = useState([])\r\n    const [filteredusers, setFilteredusers] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const user = useSelector(state => state.auth.auth);\r\n    const [ modalCentered, setModalCentered ] = useState(false);\r\n\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n        let _companyId = \"-1\";\r\n        if (user.companyId !== null) {\r\n            _companyId = user.companyId;\r\n        }\r\n        axios.get(`${BASE_URL}/api/users/bycompanyId/${_companyId}`, { headers: authHeader() })\r\n            .then(res => {\r\n                setUsers(res.data);\r\n            });\r\n    }, [])\r\n   \r\n    useEffect(() => {\r\n\r\n        let cnt = users.length > sort ? sort : (users.length - currentPage * sort);\r\n        setFilteredusers(users.filter(o => o.email.includes(searchKey)).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [users, currentPage])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(users.filter(o => o.email.includes(searchKey)).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n        if (paggination.length - 1 < currentPage) {\r\n            setCurrentPage(0);\r\n        }\r\n\r\n    }, [filteredusers])\r\n   \r\n    const onDeleteUser = id => {\r\n        axios.delete(`${BASE_URL}/api/users/${id}`, { headers: authHeader() })\r\n            .then(res => {\r\n                setUsers(users.filter(a => a.id !== res.data.id));\r\n            })\r\n    }\r\n\r\n    const onPassGenerate = () => {\r\n\r\n      let _password = \"\";\r\n      for(let i=0 ; i<5 ; i++) {\r\n          _password += Math.floor(Math.random() * 10);\r\n      }\r\n      setPassword(_password)\r\n  }\r\n\r\n  const onCreateAdmin = () => {\r\n   const newAdmin = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      address,\r\n      phone\r\n   }\r\n\r\n   axios.post(`${BASE_URL}/api/users`, newAdmin, { headers: authHeader() })\r\n            .then(res => {\r\n                setUsers([...users, res.data]);\r\n            })\r\n  }\r\n\r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                 \r\n                  <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                     <span className=\"btn-icon-left text-info\">\r\n                        <i className=\"fa fa-plus color-info\" />\r\n                     </span>\r\n                     Add\r\n                  </Button>\r\n\r\n                  <Modal className=\"fade bd-example-modal-lg\" show={modalCentered} size=\"lg\">\r\n                       <Modal.Header>\r\n                           <Modal.Title>Create An Admin</Modal.Title>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"\"\r\n                               className=\"close\"\r\n                           >\r\n                               <span>&times;</span>\r\n                           </Button>\r\n                       </Modal.Header>\r\n                       <Modal.Body>\r\n                           <div className=\"row\">\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"mb-3 col-form-label\">\r\n                                                First name\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={firstName}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"First name\"\r\n                                                    onChange={e => setFirstName(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Email\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    value={email}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter valid email\"\r\n                                                    onChange={e => setEmail(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Address\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={address}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter valid address\"\r\n                                                    onChange={e => setAddress(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Last name\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={lastName}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Last name\"\r\n                                                    onChange={e => setLastName(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Password\r\n                                            </label>\r\n                                            <div className=\"input-group mb-3\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled value={password} placeholder={\"Click on generate password\"}/>\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button\r\n                                                            className=\"btn btn-primary\"\r\n                                                            type=\"button\"\r\n                                                            onClick={onPassGenerate}\r\n                                                        >\r\n                                                            Generate\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Phone\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={phone}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter phone number of the suer\"\r\n                                                    onChange={e => setPhone(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                           </div>\r\n                          \r\n                       </Modal.Body>\r\n                       <Modal.Footer>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"danger light\"\r\n                           >\r\n                               Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={onCreateAdmin}>Create Company</Button>\r\n                       </Modal.Footer>\r\n                   </Modal>\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Admins</h4>\r\n                <div className=\"input-group search-area d-lg-inline-flex d-none mr-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchKey}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search here\"\r\n                        onChange={e => setSearchKey(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\">\r\n                            <svg\r\n                                width={20}\r\n                                height={20}\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M23.7871 22.7761L17.9548 16.9437C19.5193 15.145 20.4665 12.7982 20.4665 10.2333C20.4665 4.58714 15.8741 0 10.2333 0C4.58714 0 0 4.59246 0 10.2333C0 15.8741 4.59246 20.4665 10.2333 20.4665C12.7982 20.4665 15.145 19.5193 16.9437 17.9548L22.7761 23.7871C22.9144 23.9255 23.1007 24 23.2816 24C23.4625 24 23.6488 23.9308 23.7871 23.7871C24.0639 23.5104 24.0639 23.0528 23.7871 22.7761ZM1.43149 10.2333C1.43149 5.38004 5.38004 1.43681 10.2279 1.43681C15.0812 1.43681 19.0244 5.38537 19.0244 10.2333C19.0244 15.0812 15.0812 19.035 10.2279 19.035C5.38004 19.035 1.43149 15.0865 1.43149 10.2333Z\"\r\n                                    fill=\"#A4A4A4\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                    <table id=\"example\" className=\"display w-100 dataTable\">\r\n                    <thead>\r\n                        <tr role=\"row\">\r\n                                <th >\r\n                                Full Name\r\n                                </th>\r\n                            <th>\r\n                                Email\r\n                                </th>\r\n                                <th>\r\n                                Phone\r\n                                </th>\r\n                                <th>\r\n                                Status\r\n                                </th>\r\n                                <th>\r\n                                Actions\r\n                                </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                        filteredusers\r\n                            .map(a => (\r\n                            <tr key={a.id}>\r\n                                    <td>\r\n                                        {`${a.firstName} ${a.lastName}`}\r\n                                </td>\r\n                                <td>\r\n                                        {a.email}\r\n                                </td>\r\n                                <td>\r\n                                        {a.phoneNumber}\r\n                                </td>\r\n                                   \r\n                                    <td>\r\n                                        <StatusComponent state={ a.status} />\r\n                                </td>\r\n                                <td>\r\n                                    <Link\r\n                                        to=\"#\"\r\n                                        style={{margin: \"5px\"}}\r\n                                        className=\"btn btn-primary shadow btn-xs sharp\"\r\n                                            onClick={e => onDeleteUser(a.id)}\r\n                                    >\r\n                                        <i className=\"fa fa-pencil\"></i>\r\n                                        </Link>\r\n                                        {\r\n                                            user.roles[0] === \"SuperAdmin\" &&\r\n                                        (a.status ?\r\n                                            <Link\r\n                                                to=\"#\"\r\n                                                style={{ margin: \"5px\" }}\r\n                                                className=\"btn btn-warning shadow btn-xs sharp\"\r\n                                                onClick={e => onDeleteUser(a.id)}\r\n                                            >\r\n                                                <i className=\"fa fa-ban\"></i>\r\n                                            </Link> :\r\n                                            <Link\r\n                                                to=\"#\"\r\n                                                style={{ margin: \"5px\" }}\r\n                                                className=\"btn btn-success shadow btn-xs sharp\"\r\n                                                onClick={e => onDeleteUser(a.id)}\r\n                                            >\r\n                                                <i className=\"fa fa-check\"></i>\r\n                                            </Link>)\r\n                                        }\r\n                                        \r\n                                    <Link\r\n                                        to=\"#\"\r\n                                        style={{margin: \"5px\"}}\r\n                                        className=\"btn btn-danger shadow btn-xs sharp\"\r\n                                            onClick={e => onDeleteUser(a.id)}\r\n                                    >\r\n                                        <i className=\"fa fa-trash\"></i>\r\n                                    </Link>\r\n                                </td>\r\n                            </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                    <div className=\"dataTables_info\">\r\n                        Showing {currentPage * sort + 1} to \r\n                        {filteredusers.length >\r\n                            (currentPage + 1) * sort\r\n                            ? filteredusers.length\r\n                            : (currentPage + 1) * sort}\r\n                        of {users.length} entries\r\n                    </div>\r\n                    <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                        <Pagination\r\n                            className=\"pagination-primary pagination-circle\"\r\n                            size=\"lg\"\r\n                        >\r\n                            <li\r\n                                className=\"page-item page-indicator \"\r\n                                onClick={() =>\r\n                                    currentPage > 0 &&\r\n                                    setCurrentPage(currentPage - 1)\r\n                                }\r\n                            >\r\n                                <Link className=\"page-link\" to=\"#\">\r\n                                <i className=\"la la-angle-left\" />\r\n                                </Link>\r\n                            </li>\r\n                        {\r\n                            paggination.map((number, i) => (\r\n                                <Pagination.Item \r\n                                    className={\r\n                                        currentPage === i ? \"active\" : \"\"\r\n                                    }\r\n                                    onClick={() => setCurrentPage(i)}\r\n                                    key={i}\r\n                                >\r\n                                    {number}\r\n                                </Pagination.Item>\r\n                                ))\r\n                            }\r\n                            <li\r\n                                className=\"page-item page-indicator\"\r\n                                onClick={() =>\r\n                                    currentPage + 1 <\r\n                                    filteredusers &&\r\n                                    setCurrentPage(currentPage + 1)\r\n                                }\r\n                            >\r\n                                <Link className=\"page-link\" to=\"#\">\r\n                                <i className=\"la la-angle-right\" />\r\n                                </Link>\r\n                            </li>\r\n                        </Pagination>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Companies.js",["201","202","203"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {  Pagination, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { BASE_URL } from \"../../constance/index.js\";\r\nimport MetarialDate from \"../components/MetarialDate\";\r\nimport swal from \"sweetalert\";\r\nimport authHeader from \"../components/AuthHeader.js\";\r\n\r\nexport default () => {\r\n\r\n    const [companies, setCompanies] = useState([])\r\n    const [filteredcompanies, setFilteredcompanies] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    const [companyShortName, setCompanyShortName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [ licenseIssueDate, setLicenseIssueDate ] = useState(new Date());\r\n    const [ numberOfLicenses, setNumberOfLicenses ] = useState(0);\r\n    const [ companyId, setCompanyId] = useState(\"\");\r\n    const [licenseExpireDate, setLicenseExpireDate] = useState(new Date());\r\n    const [type, setType] = useState(0);\r\n    const [description, setDescription] = useState(\"\")\r\n\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n\r\n        let cnt = companies.length > sort ? sort : (companies.length - currentPage * sort);\r\n        setFilteredcompanies(companies.filter(o => o.companyShortName.includes(searchKey)).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [companies, currentPage])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(companies.filter(o => o.companyShortName.includes(searchKey)).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n        if (paggination.length - 1 < currentPage) {\r\n            setCurrentPage(0);\r\n        }\r\n\r\n    }, [filteredcompanies])\r\n   \r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/api/companies`, { headers: authHeader()})\r\n            .then(res => {\r\n                setCompanies(res.data);\r\n            });\r\n    }, [])\r\n\r\n    const onCreateCompany = () => {\r\n        const newCompany = {\r\n            id: companyId,\r\n            companyName,\r\n            companyShortName,\r\n            address,\r\n            description,\r\n            licenseIssueDate,\r\n            licenseExpireDate,\r\n            numberOfLicenses: Number.parseInt(numberOfLicenses),\r\n            type: Number.parseInt(type)\r\n        }\r\n        \r\n        console.log(newCompany)\r\n        \r\n        axios.post(`${BASE_URL}/api/companies`, newCompany, { headers: authHeader() })\r\n            .then(res => {\r\n                setModalCentered(false)\r\n                swal(\"Company details has been successfully captured!\", \"\", \"success\");\r\n                setCompanies([...companies, res.data])\r\n            })\r\n    }\r\n\r\n    const onDeleteCompany = id => {\r\n        axios.delete(`${BASE_URL}/api/companies/${id}`, { headers: authHeader() })\r\n            .then(res => {\r\n                setCompanies(companies.filter(a => a.id !== id));\r\n            })\r\n    }\r\n\r\n    const onIDGenerate = () => {\r\n\r\n        let _companyId = \"\";\r\n        for(let i=0 ; i<12 ; i++) {\r\n            if(i !== 0 && i%4 === 0) _companyId += \"-\";\r\n            _companyId += Math.floor(Math.random() * 10 );\r\n        }\r\n        setCompanyId(_companyId)\r\n    }\r\n    \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                   <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Create a company\r\n                   </Button>\r\n\r\n                   <Modal className=\"fade bd-example-modal-lg\" show={modalCentered} size=\"lg\">\r\n                       <Modal.Header>\r\n                           <Modal.Title>Create A Company</Modal.Title>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"\"\r\n                               className=\"close\"\r\n                           >\r\n                               <span>&times;</span>\r\n                           </Button>\r\n                       </Modal.Header>\r\n                       <Modal.Body>\r\n                           <div className=\"row\">\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Company name\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={companyName}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter company name\"\r\n                                                    onChange={e => setCompanyName(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Company short name\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={companyShortName}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Ex: APPLE\"\r\n                                                    onChange={e => setCompanyShortName(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"col-form-label\">\r\n                                                <label>License issue date</label>\r\n                                                <MetarialDate value={licenseIssueDate} onChange={setLicenseIssueDate}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Number of licenses\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={numberOfLicenses}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter the number of licenses\"\r\n                                                    onChange={e => setNumberOfLicenses(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Address\r\n                                            </label>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={address}\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Enter company address\"\r\n                                                    onChange={e => setAddress(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"col-form-label\">\r\n                                                Company ID\r\n                                            </label>\r\n                                            <div className=\"input-group\">\r\n                                                    <input type=\"text\" className=\"form-control\" disabled value={companyId} placeholder={\"Ex: 4953-3270-3463\"}/>\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button\r\n                                                            className=\"btn btn-primary\"\r\n                                                            type=\"button\"\r\n                                                            onClick={onIDGenerate}\r\n                                                        >\r\n                                                            Generate\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"col-form-label\">\r\n                                                <label>License expire date</label>\r\n                                                <MetarialDate value={licenseExpireDate} onChange={setLicenseExpireDate}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                           <div className=\"col-form-label\">\r\n                                               <label>Select the type</label>\r\n                                               <select className=\"form-control\" onChange={e => setType(e.target.value)}>\r\n                                                   <option value={0}>Trail</option>\r\n                                                   <option value={1}>Paid</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                           </div>\r\n\r\n                           <div className=\"form-group\">\r\n                               <label className=\"col-form-label\">\r\n                                   Description\r\n                               </label>\r\n                               <div>\r\n                                   <textarea\r\n                                       className=\"form-control\"\r\n                                       rows=\"4\"\r\n                                       value={description}\r\n                                       onChange={ e => setDescription(e.target.value)}\r\n                                   ></textarea>\r\n                               </div>\r\n                           </div>\r\n                       </Modal.Body>\r\n                       <Modal.Footer>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"danger light\"\r\n                           >\r\n                               Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={onCreateCompany}>Create Company</Button>\r\n                       </Modal.Footer>\r\n                   </Modal>\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Companies</h4>\r\n                <div className=\"input-group search-area d-lg-inline-flex d-none mr-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchKey}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search here\"\r\n                        onChange={e => setSearchKey(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\">\r\n                            <svg\r\n                                width={20}\r\n                                height={20}\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M23.7871 22.7761L17.9548 16.9437C19.5193 15.145 20.4665 12.7982 20.4665 10.2333C20.4665 4.58714 15.8741 0 10.2333 0C4.58714 0 0 4.59246 0 10.2333C0 15.8741 4.59246 20.4665 10.2333 20.4665C12.7982 20.4665 15.145 19.5193 16.9437 17.9548L22.7761 23.7871C22.9144 23.9255 23.1007 24 23.2816 24C23.4625 24 23.6488 23.9308 23.7871 23.7871C24.0639 23.5104 24.0639 23.0528 23.7871 22.7761ZM1.43149 10.2333C1.43149 5.38004 5.38004 1.43681 10.2279 1.43681C15.0812 1.43681 19.0244 5.38537 19.0244 10.2333C19.0244 15.0812 15.0812 19.035 10.2279 19.035C5.38004 19.035 1.43149 15.0865 1.43149 10.2333Z\"\r\n                                    fill=\"#A4A4A4\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n               <Table responsive className=\"w-100\">\r\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                     <table id=\"example\" className=\"display w-100 dataTable\">\r\n                        <thead>\r\n                           <tr role=\"row\">\r\n                                 <th >\r\n                                    #\r\n                                </th>\r\n                                <th >\r\n                                    Name\r\n                                </th>\r\n                                <th>\r\n                                    Issued\r\n                                 </th>\r\n                                 <th>\r\n                                    Expired\r\n                                 </th>\r\n                                 <th>\r\n                                    Type\r\n                                 </th>\r\n                                 <th>\r\n                                    Count\r\n                                 </th>\r\n                                 <th>\r\n                                    Actions\r\n                                 </th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                filteredcompanies\r\n                                .map(a => (\r\n                                <tr key={a.id}>\r\n                                    <td>\r\n                                            {a.id}\r\n                                    </td>\r\n                                    <td>\r\n                                        {a.companyName}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.licenseIssueDate}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.licenseExpireDate}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.type === 0 ? \"Trail\" : \"Paid\"}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.numberOfLicenses}\r\n                                    </td>\r\n                                    <td >\r\n                                            <Link\r\n                                                to={`/company-profile/${a.id}`}\r\n                                                className=\"btn btn-success shadow btn-xs sharp \"\r\n                                                style={{ margin: \"5px\" }}\r\n                                            >\r\n                                                <i className=\"fa fa-eye\"></i>\r\n                                            </Link>\r\n                                            <Link\r\n                                                to=\"#\"\r\n                                                className=\"btn btn-danger shadow btn-xs sharp \"\r\n                                                onClick={e => onDeleteCompany(a.id)}\r\n                                            >\r\n                                                <i className=\"fa fa-trash\"></i>\r\n                                            </Link>\r\n                                    </td>\r\n                                    </tr>\r\n                                    ))\r\n                            }\r\n                            </tbody>\r\n                     </table>\r\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                        <div className=\"dataTables_info\">\r\n                            Showing {currentPage * sort + 1} to \r\n                            {filteredcompanies.length >\r\n                                (currentPage + 1) * sort\r\n                                ? filteredcompanies.length\r\n                                : (currentPage + 1) * sort}\r\n                            of {companies.length} entries\r\n                        </div>\r\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                           <Pagination\r\n                              className=\"pagination-primary pagination-circle\"\r\n                              size=\"lg\"\r\n                           >\r\n                              <li\r\n                                 className=\"page-item page-indicator \"\r\n                                    onClick={() =>\r\n                                        currentPage > 0 &&\r\n                                        setCurrentPage(currentPage - 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-left\" />\r\n                                 </Link>\r\n                              </li>\r\n                            {\r\n                                paggination.map((number, i) => (\r\n                                    <Pagination.Item \r\n                                        className={\r\n                                            currentPage === i ? \"active\" : \"\"\r\n                                        }\r\n                                       onClick={() => setCurrentPage(i)}\r\n                                       key={i}\r\n                                    >\r\n                                       {number}\r\n                                    </Pagination.Item>\r\n                                 ))\r\n                              }\r\n                              <li\r\n                                 className=\"page-item page-indicator\"\r\n                                    onClick={() =>\r\n                                        currentPage + 1 <\r\n                                        filteredcompanies &&\r\n                                        setCurrentPage(currentPage + 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-right\" />\r\n                                 </Link>\r\n                              </li>\r\n                           </Pagination>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </Table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Home.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\MetarialDate.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Agents.js",["204","205","206","207"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {  Pagination, Badge, Dropdown, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { BASE_URL } from \"../../constance/index.js\";\r\nimport { useInterval } from \"../components/UseInterval.js\";\r\nimport Select from \"react-select\";\r\nimport { useSelector } from \"react-redux\"\r\nimport authHeader from \"../components/AuthHeader.js\";\r\n\r\nconst StatusComponent = ({state}) => {\r\n   switch (state) {\r\n      case 0:\r\n         return <Badge variant=\"primary light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Installed\r\n         </Badge>\r\n      case 1:\r\n           return <Badge variant=\"success light\">\r\n               <i className=\"fa fa-circle text-warning mr-1\"></i>\r\n            Running\r\n         </Badge>\r\n      case 2:\r\n           return <Badge variant=\"danger light\">\r\n               <i className=\"fa fa-circle text-danger mr-1\"></i>\r\n            Stoped\r\n           </Badge>\r\n       case 3:\r\n           return <Badge variant=\"warning light\">\r\n               <i className=\"fa fa-circle text-danger mr-1\"></i>\r\n               Uninstalled\r\n           </Badge>\r\n      case 4:\r\n           return <Badge variant=\"secondary light\">\r\n               <i className=\"fa fa-circle text-success mr-1\"></i>\r\n               Turned off\r\n           </Badge>\r\n      default:\r\n           return <Badge variant=\"secondary light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Turned off\r\n         </Badge>\r\n   }\r\n}\r\n\r\nconst Agents = (props) => {\r\n\r\n    const [agents, setAgents] = useState([])\r\n    const [processes, setprocesses] = useState([])\r\n    const [filteredAgents, setFilteredAgents] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [byFilter, setByFilter] = useState(100);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    const [selectedProcesses, setselectedProcesses] = useState('');\r\n    const companyId = useSelector(state => state.auth.auth.companyId);\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/api/agent/byCompanyId/${companyId}`, { headers: authHeader() })\r\n            .then(res => {\r\n                setAgents(res.data);\r\n            });\r\n        axios.get(`${BASE_URL}/api/process/-1`, { headers: authHeader() })\r\n            .then(res => {\r\n                setprocesses(res.data.map(c => ({ id: c.id, label: c.label, value: c.label })));\r\n            });\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        axios.get(`${BASE_URL}/api/agent/byCompanyId/${companyId}`, { headers: authHeader() })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setAgents(res.data);\r\n            });\r\n    }, 5000)\r\n   \r\n    useEffect(() => {\r\n\r\n        let cnt = agents.length > sort ? sort : (agents.length - currentPage * sort);\r\n        setFilteredAgents(agents.filter(o => byFilter === 100 ? true : o.status === byFilter).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [agents, currentPage, byFilter])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(agents.filter(o => byFilter === 100 ? true : o.status === byFilter).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n        if (paggination.length - 1 < currentPage) {\r\n            setCurrentPage(0);\r\n        }\r\n\r\n    }, [filteredAgents])\r\n\r\n    const onSetAgentState = ({ status, agent }) => {\r\n        if (status === 100) {\r\n            props.history.push(`/processes/${agent.id}`);\r\n            return;\r\n        }\r\n        agent.status = status;\r\n        axios.put(`${BASE_URL}/api/agent`, agent)\r\n            .then(res => {\r\n                let changedAgents = agents.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setAgents(changedAgents);\r\n            });\r\n    }\r\n   \r\n  \r\n    \r\n    const newAgent = () => {\r\n        //axios.post(`${BASE_URL}/api/agent`, { companyId: company.id })\r\n        //    .then(res => {\r\n        //        setAgents([res.data, ...agents]);\r\n        //        axios({\r\n        //            url: `${BASE_URL}/api/agent/download`,\r\n        //            method: 'GET',\r\n        //            responseType: 'blob', // important\r\n        //        })\r\n        //            .then(res => {\r\n        //                const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        //                const link = document.createElement('a');\r\n        //                link.href = url;\r\n        //                link.setAttribute('download', 'archive.zip');\r\n        //                document.body.appendChild(link);\r\n        //                link.click();\r\n        //            })\r\n        //    })\r\n    }\r\n\r\n    const deleteAgent = id => {\r\n        axios.delete(`${BASE_URL}/api/agent/${id}`)\r\n            .then(res => {\r\n                setAgents(agents.filter(a => a.id !== res.data.id));\r\n            })\r\n    }\r\n\r\n    const byFilterLabel = id => {\r\n        switch (id) {\r\n            case 0:\r\n                return 'Installed';\r\n            case 1:\r\n                return 'Starting';\r\n            case 2:\r\n                return 'Stoped';\r\n            case 3:\r\n                return 'Uninstalled';\r\n            case 4:\r\n                return 'Turned off';\r\n            default:\r\n                return 'All';\r\n        }\r\n    }\r\n   \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                   <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Create a agent\r\n                   </Button>\r\n\r\n                   <Modal className=\"fade\" show={modalCentered}>\r\n                       <Modal.Header>\r\n                           <Modal.Title>Modal title</Modal.Title>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"\"\r\n                               className=\"close\"\r\n                           >\r\n                               <span>&times;</span>\r\n                           </Button>\r\n                       </Modal.Header>\r\n                       <Modal.Body>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Select the processes\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <Select\r\n                                           multi\r\n                                           onChange={setselectedProcesses}\r\n                                           options={processes}\r\n                                           style={{\r\n                                               lineHeight: \"40px\",\r\n                                               color: \"#7e7e7e\",\r\n                                               paddingLeft: \" 15px\",\r\n                                           }}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n\r\n                           </div>\r\n                       </Modal.Body>\r\n                       <Modal.Footer>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"danger light\"\r\n                           >\r\n                               Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={newAgent}>Create Agent</Button>\r\n                       </Modal.Footer>\r\n                   </Modal>\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Agents</h4>\r\n                        <div className=\"input-group search-area d-lg-inline-flex d-none mr-5\">\r\n                            <input\r\n                                type=\"text\"\r\n                                value={searchKey}\r\n                                className=\"form-control\"\r\n                                placeholder=\"Search here\"\r\n                                onChange={e => setSearchKey(e.target.value)}\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">\r\n                                    <svg\r\n                                        width={20}\r\n                                        height={20}\r\n                                        viewBox=\"0 0 24 24\"\r\n                                        fill=\"none\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            d=\"M23.7871 22.7761L17.9548 16.9437C19.5193 15.145 20.4665 12.7982 20.4665 10.2333C20.4665 4.58714 15.8741 0 10.2333 0C4.58714 0 0 4.59246 0 10.2333C0 15.8741 4.59246 20.4665 10.2333 20.4665C12.7982 20.4665 15.145 19.5193 16.9437 17.9548L22.7761 23.7871C22.9144 23.9255 23.1007 24 23.2816 24C23.4625 24 23.6488 23.9308 23.7871 23.7871C24.0639 23.5104 24.0639 23.0528 23.7871 22.7761ZM1.43149 10.2333C1.43149 5.38004 5.38004 1.43681 10.2279 1.43681C15.0812 1.43681 19.0244 5.38537 19.0244 10.2333C19.0244 15.0812 15.0812 19.035 10.2279 19.035C5.38004 19.035 1.43149 15.0865 1.43149 10.2333Z\"\r\n                                            fill=\"#A4A4A4\"\r\n                                        />\r\n                                    </svg>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    <Dropdown className=\"dropdown mt-sm-0 mt-3\">\r\n                        <Dropdown.Toggle\r\n                            as=\"button\"\r\n                            variant=\"\"\r\n                            className=\"btn rounded border border-light dropdown-toggle\"\r\n                        >\r\n                            {byFilterLabel(byFilter)}\r\n                        </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                            <Dropdown.Item onClick={ () => setByFilter(100)}>All</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(0)}>Installed</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(1)}>Started</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(2)}>Stopped</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(3)}>Uninstalled</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(2)}>Turned off</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                            <table id=\"example\" className=\"display w-100 dataTable\">\r\n                                <thead>\r\n                                <tr role=\"row\">\r\n                                        <th >\r\n                                            Liecense\r\n                                        </th>\r\n                                        <th>\r\n                                            Machine ID\r\n                                        </th>\r\n                                        <th>\r\n                                            IP Address\r\n                                        </th>\r\n                                        <th>\r\n                                            Created At\r\n                                        </th>\r\n                                        <th>\r\n                                            Updated At\r\n                                        </th>\r\n                                        <th className=\"text-center\">\r\n                                            Status\r\n                                        </th>\r\n                                        <th>\r\n                                            Actions\r\n                                        </th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        filteredAgents\r\n                                        .map(a => (\r\n                                        <tr key={a.id}>\r\n                                            <td>\r\n                                                {a.id}\r\n                                            </td>\r\n                                            <td>\r\n                                                    {a.machineID}\r\n                                            </td>\r\n                                            <td className=\"text-center\">\r\n                                                    {a.ipAddress}\r\n                                            </td>\r\n                                                <td>\r\n                                                    {a.createdAt}\r\n                                            </td>\r\n                                            <td className=\"text-center\">\r\n                                                    {a.updatedAt}\r\n                                            </td>\r\n                                            <td className=\"text-center\">\r\n                                                <StatusComponent state={a.status} />\r\n                                            </td>\r\n                                            <td>\r\n                                                <Dropdown>\r\n                                                    <Dropdown.Toggle\r\n                                                        variant\r\n                                                        className=\"icon-false table-dropdown\"\r\n                                                    >\r\n                                                        <svg\r\n                                                            width=\"24px\"\r\n                                                            height=\"24px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect\r\n                                                                    x=\"0\"\r\n                                                                    y=\"0\"\r\n                                                                    width=\"24\"\r\n                                                                    height=\"24\"\r\n                                                                ></rect>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"5\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"12\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"19\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                        <Dropdown.Menu>\r\n                                                            <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 1, agent: a })}>\r\n                                                            Start\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 2, agent: a })}>\r\n                                                            Stop\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 3, agent: a })}>\r\n                                                            Uninstall\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item to=\"#\" onClick={() => deleteAgent(a.id)}>\r\n                                                            Delete\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item to=\"#\">\r\n                                                            View Details\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 100, agent: a })}>\r\n                                                            View Process list\r\n                                                        </Dropdown.Item>\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n                                            </td>\r\n                                            </tr>\r\n\r\n                                            ))\r\n                                    }\r\n                                    </tbody>\r\n                            </table>\r\n                            <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                                <div className=\"dataTables_info\">\r\n                                    Showing {currentPage * sort + 1} to \r\n                                    {filteredAgents.length >\r\n                                        (currentPage + 1) * sort\r\n                                        ? filteredAgents.length\r\n                                        : (currentPage + 1) * sort}\r\n                                    of {agents.length} entries\r\n                                </div>\r\n                                <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                                <Pagination\r\n                                    className=\"pagination-primary pagination-circle\"\r\n                                    size=\"lg\"\r\n                                >\r\n                                    <li\r\n                                        className=\"page-item page-indicator \"\r\n                                            onClick={() =>\r\n                                                currentPage > 0 &&\r\n                                                setCurrentPage(currentPage - 1)\r\n                                        }\r\n                                    >\r\n                                        <Link className=\"page-link\" to=\"#\">\r\n                                            <i className=\"la la-angle-left\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                    {\r\n                                        paggination.map((number, i) => (\r\n                                            <Pagination.Item \r\n                                                className={\r\n                                                    currentPage === i ? \"active\" : \"\"\r\n                                                }\r\n                                            onClick={() => setCurrentPage(i)}\r\n                                            key={i}\r\n                                            >\r\n                                            {number}\r\n                                            </Pagination.Item>\r\n                                        ))\r\n                                    }\r\n                                    <li\r\n                                        className=\"page-item page-indicator\"\r\n                                            onClick={() =>\r\n                                                currentPage + 1 <\r\n                                                filteredAgents &&\r\n                                                setCurrentPage(currentPage + 1)\r\n                                        }\r\n                                    >\r\n                                        <Link className=\"page-link\" to=\"#\">\r\n                                            <i className=\"la la-angle-right\" />\r\n                                        </Link>\r\n                                    </li>\r\n                                </Pagination>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Agents;\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\CompanyProfile.js",["208","209","210","211"],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\PageTitle.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\AuthHeader.js",["212"],"﻿export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('userDetails'));\r\n\r\n    if (user && user.token) {\r\n        // for Node.js Express back-end\r\n        return { 'Authorization': `Bearer ${user.token.accessToken}` };\r\n    } else {\r\n        return {};\r\n    }\r\n}",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":1,"nodeType":"219","messageId":"220","fix":"221"},{"ruleId":"213","replacedBy":"222"},{"ruleId":"215","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":66,"column":8,"nodeType":"226","endLine":66,"endColumn":10,"suggestions":"227"},{"ruleId":"224","severity":1,"message":"228","line":82,"column":8,"nodeType":"226","endLine":82,"endColumn":42,"suggestions":"229"},{"ruleId":"224","severity":1,"message":"230","line":90,"column":8,"nodeType":"226","endLine":90,"endColumn":27,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":108,"column":11,"nodeType":"234","messageId":"235","endLine":108,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":126,"column":65,"nodeType":"238","messageId":"220","endLine":126,"endColumn":67},{"ruleId":"232","severity":1,"message":"239","line":5,"column":37,"nodeType":"234","messageId":"235","endLine":5,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":30,"column":1,"nodeType":"242","endLine":423,"endColumn":3},{"ruleId":"224","severity":1,"message":"243","line":57,"column":8,"nodeType":"226","endLine":57,"endColumn":10,"suggestions":"244"},{"ruleId":"224","severity":1,"message":"245","line":64,"column":8,"nodeType":"226","endLine":64,"endColumn":28,"suggestions":"246"},{"ruleId":"224","severity":1,"message":"247","line":75,"column":8,"nodeType":"226","endLine":75,"endColumn":23,"suggestions":"248"},{"ruleId":"240","severity":1,"message":"241","line":10,"column":1,"nodeType":"242","endLine":416,"endColumn":3},{"ruleId":"224","severity":1,"message":"249","line":35,"column":8,"nodeType":"226","endLine":35,"endColumn":32,"suggestions":"250"},{"ruleId":"224","severity":1,"message":"251","line":46,"column":8,"nodeType":"226","endLine":46,"endColumn":27,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"239","line":2,"column":55,"nodeType":"234","messageId":"235","endLine":2,"endColumn":60},{"ruleId":"232","severity":1,"message":"253","line":56,"column":12,"nodeType":"234","messageId":"235","endLine":56,"endColumn":29},{"ruleId":"224","severity":1,"message":"254","line":69,"column":8,"nodeType":"226","endLine":69,"endColumn":10,"suggestions":"255"},{"ruleId":"224","severity":1,"message":"256","line":95,"column":8,"nodeType":"226","endLine":95,"endColumn":24,"suggestions":"257"},{"ruleId":"232","severity":1,"message":"258","line":4,"column":8,"nodeType":"234","messageId":"235","endLine":4,"endColumn":17},{"ruleId":"232","severity":1,"message":"239","line":6,"column":42,"nodeType":"234","messageId":"235","endLine":6,"endColumn":47},{"ruleId":"232","severity":1,"message":"259","line":46,"column":27,"nodeType":"234","messageId":"235","endLine":46,"endColumn":43},{"ruleId":"224","severity":1,"message":"260","line":63,"column":8,"nodeType":"226","endLine":63,"endColumn":10,"suggestions":"261"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":1,"nodeType":"219","messageId":"220","fix":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"265","text":"266"},["263"],["264"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params.agentId' and 'user.companyId'. Either include them or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has a missing dependency: 'params.agentId'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'byFilter', 'params.agentId', and 'processes'. Either include them or remove the dependency array.",["269"],"no-unused-vars","'onSetProcessTarget' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Table' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'user.companyId'. Either include it or remove the dependency array.",["270"],"React Hook useEffect has a missing dependency: 'searchKey'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredusers' needs the current value of 'searchKey'.",["271"],"React Hook useEffect has missing dependencies: 'currentPage', 'searchKey', and 'users'. Either include them or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'searchKey'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredcompanies' needs the current value of 'searchKey'.",["273"],"React Hook useEffect has missing dependencies: 'companies', 'currentPage', and 'searchKey'. Either include them or remove the dependency array.",["274"],"'selectedProcesses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'companyId'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'agents', 'byFilter', and 'currentPage'. Either include them or remove the dependency array.",["276"],"'profile05' is defined but never used.","'setSelectedAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.companyId'. Either include it or remove the dependency array.",["277"],{"range":"278","text":"266"},"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},[-1,0],"Update the dependencies array to be: [params.agentId, user.companyId]",{"range":"301","text":"302"},"Update the dependencies array to be: [processes, currentPage, byFilter, params.agentId]",{"range":"303","text":"304"},"Update the dependencies array to be: [byFilter, filteredProcesses, params.agentId, processes]",{"range":"305","text":"306"},"Update the dependencies array to be: [user.companyId]",{"range":"307","text":"308"},"Update the dependencies array to be: [users, currentPage, searchKey]",{"range":"309","text":"310"},"Update the dependencies array to be: [currentPage, filteredusers, searchKey, users]",{"range":"311","text":"312"},"Update the dependencies array to be: [companies, currentPage, searchKey]",{"range":"313","text":"314"},"Update the dependencies array to be: [companies, currentPage, filteredcompanies, searchKey]",{"range":"315","text":"316"},"Update the dependencies array to be: [companyId]",{"range":"317","text":"318"},"Update the dependencies array to be: [agents, byFilter, currentPage, filteredAgents]",{"range":"319","text":"320"},"Update the dependencies array to be: [params.companyId]",{"range":"321","text":"322"},[2419,2421],"[params.agentId, user.companyId]",[3111,3145],"[processes, currentPage, byFilter, params.agentId]",[3480,3499],"[byFilter, filteredProcesses, params.agentId, processes]",[2072,2074],"[user.companyId]",[2328,2348],"[users, currentPage, searchKey]",[2682,2697],"[currentPage, filteredusers, searchKey, users]",[1622,1646],"[companies, currentPage, searchKey]",[1995,2014],"[companies, currentPage, filteredcompanies, searchKey]",[2664,2666],"[companyId]",[3590,3606],"[agents, byFilter, currentPage, filteredAgents]",[2540,2542],"[params.companyId]"]