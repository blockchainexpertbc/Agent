[{"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\index.js":"1","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\reportWebVitals.js":"2","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\App.js":"3","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\store.js":"4","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\context\\ThemeContext.js":"5","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\selectors\\AuthSelectors.js":"6","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\index.js":"7","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\services\\AuthService.js":"8","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\ForgotPassword.js":"9","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Registration.js":"10","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Login.js":"11","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\AuthReducer.js":"12","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\PostsReducer.js":"13","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\Reducers.js":"14","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error400.js":"15","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\LockScreen.js":"16","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error404.js":"17","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error403.js":"18","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error500.js":"19","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error503.js":"20","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\ScrollToTop.js":"21","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\Footer.js":"22","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\AuthActions.js":"23","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Loader\\Loader.js":"24","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\PostTypes.js":"25","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Processes.js":"26","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Agents.js":"27","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\Dashboard\\Home.js":"28","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\UseInterval.js":"29","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\constance\\index.js":"30","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\index.js":"31","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js":"32","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\Line4.js":"33","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js":"34","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Header.js":"35","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\NavHader.js":"36","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\SideBar.js":"37","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Logout.js":"38","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Companies.js":"39","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Users.js":"40"},{"size":862,"mtime":1637307984418,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1618627410000,"results":"43","hashOfConfig":"42"},{"size":2637,"mtime":1639487826842,"results":"44","hashOfConfig":"42"},{"size":1680,"mtime":1638103325516,"results":"45","hashOfConfig":"42"},{"size":1906,"mtime":1635618112000,"results":"46","hashOfConfig":"42"},{"size":106,"mtime":1637659025173,"results":"47","hashOfConfig":"42"},{"size":3253,"mtime":1639489813813,"results":"48","hashOfConfig":"42"},{"size":2485,"mtime":1638343286577,"results":"49","hashOfConfig":"42"},{"size":2098,"mtime":1637661486642,"results":"50","hashOfConfig":"42"},{"size":6448,"mtime":1637661498336,"results":"51","hashOfConfig":"42"},{"size":12224,"mtime":1637668667998,"results":"52","hashOfConfig":"42"},{"size":1799,"mtime":1626565210000,"results":"53","hashOfConfig":"42"},{"size":1666,"mtime":1616829806000,"results":"54","hashOfConfig":"42"},{"size":1054,"mtime":1626222696000,"results":"55","hashOfConfig":"42"},{"size":1081,"mtime":1629509612000,"results":"56","hashOfConfig":"42"},{"size":1741,"mtime":1635627396000,"results":"57","hashOfConfig":"42"},{"size":1036,"mtime":1629509606000,"results":"58","hashOfConfig":"42"},{"size":955,"mtime":1629509608000,"results":"59","hashOfConfig":"42"},{"size":1093,"mtime":1629509602000,"results":"60","hashOfConfig":"42"},{"size":1089,"mtime":1629509598000,"results":"61","hashOfConfig":"42"},{"size":256,"mtime":1606273284000,"results":"62","hashOfConfig":"42"},{"size":202,"mtime":1637423379484,"results":"63","hashOfConfig":"42"},{"size":2741,"mtime":1637661507247,"results":"64","hashOfConfig":"42"},{"size":155,"mtime":1629425976000,"results":"65","hashOfConfig":"42"},{"size":503,"mtime":1616829806000,"results":"66","hashOfConfig":"42"},{"size":20638,"mtime":1637423018680,"results":"67","hashOfConfig":"42"},{"size":20716,"mtime":1639891563804,"results":"68","hashOfConfig":"42"},{"size":90906,"mtime":1609028320000,"results":"69","hashOfConfig":"42"},{"size":472,"mtime":1637417900025,"results":"70","hashOfConfig":"42"},{"size":49,"mtime":1639733238688,"results":"71","hashOfConfig":"42"},{"size":875,"mtime":1637231965852,"results":"72","hashOfConfig":"42"},{"size":4828,"mtime":1635376628000,"results":"73","hashOfConfig":"42"},{"size":2326,"mtime":1635475068000,"results":"74","hashOfConfig":"42"},{"size":1865,"mtime":1635376638000,"results":"75","hashOfConfig":"42"},{"size":834,"mtime":1639905492350,"results":"76","hashOfConfig":"42"},{"size":892,"mtime":1635620620000,"results":"77","hashOfConfig":"42"},{"size":3451,"mtime":1639490004508,"results":"78","hashOfConfig":"42"},{"size":1368,"mtime":1626567958000,"results":"79","hashOfConfig":"42"},{"size":14854,"mtime":1639891105930,"results":"80","hashOfConfig":"42"},{"size":9473,"mtime":1639905949840,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"16dmldy",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\index.js",[],["169","170"],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\reportWebVitals.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\App.js",["171"],"import { lazy, Suspense, useEffect } from 'react';\r\n/// Components\r\nimport Index from './jsx/index';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\n// action\r\nimport { checkAutoLogin } from './services/AuthService';\r\nimport { isAuthenticated } from './store/selectors/AuthSelectors';\r\n/// Style\r\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./css/style.css\";\r\n\r\n\r\nconst SignUp = lazy(() => import('./jsx/pages/Registration'));\r\nconst ForgotPassword = lazy(() => import('./jsx/pages/ForgotPassword'));\r\n\r\nconst Login = lazy(() => {\r\n    return new Promise(resolve => {\r\n\t\tsetTimeout(() => resolve(import('./jsx/pages/Login')), 500);\r\n\t});\r\n});\r\n\r\nfunction App (props) {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        //checkAutoLogin(dispatch, props.history);\r\n    }, [dispatch, props.history]);\r\n    \r\n    let routes = (  \r\n        <Switch>\r\n            <Route path='/page-login' component={Login} />\r\n            <Route path='/page-register' component={SignUp} />\r\n            <Route path='/page-forgot-password' component={ForgotPassword} />\r\n            <Redirect path='*' to='page-login'/>\r\n        </Switch>\r\n    );\r\n\r\n    if (!props.isAuthenticated) {\r\n\t\treturn (\r\n\t\t\t<>\r\n                <Suspense fallback={\r\n                    <div id=\"preloader\">\r\n                        <div className=\"sk-three-bounce\">\r\n                            <div className=\"sk-child sk-bounce1\"></div>\r\n                            <div className=\"sk-child sk-bounce2\"></div>\r\n                            <div className=\"sk-child sk-bounce3\"></div>\r\n                        </div>\r\n                    </div>  \r\n                   }\r\n                >\r\n                    <Index />\r\n                </Suspense>\r\n            </>\r\n        );\r\n\t\r\n\t}else{\r\n\t\treturn (\r\n\t\t\t<div className=\"vh-100\">\r\n                <Suspense fallback={\r\n                    <div id=\"preloader\">\r\n                        <div className=\"sk-three-bounce\">\r\n                            <div className=\"sk-child sk-bounce1\"></div>\r\n                            <div className=\"sk-child sk-bounce2\"></div>\r\n                            <div className=\"sk-child sk-bounce3\"></div>\r\n                        </div>\r\n                    </div>\r\n                  }\r\n                >\r\n                    {routes}\r\n                </Suspense>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: isAuthenticated(state),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(App)); \r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\store.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\context\\ThemeContext.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\selectors\\AuthSelectors.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\services\\AuthService.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\ForgotPassword.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Registration.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Login.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\AuthReducer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\PostsReducer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\reducers\\Reducers.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error400.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\LockScreen.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error404.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error403.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error500.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Error503.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\ScrollToTop.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\Footer.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\AuthActions.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\pages\\Loader\\Loader.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\store\\actions\\PostTypes.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Processes.js",["172","173","174","175"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {  Pagination, Badge, Dropdown, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../../constance/index.js\";\r\nimport axios from 'axios'\r\nimport { useInterval } from \"../UseInterval.js\";\r\n\r\nconst StatusComponent = ({state}) => {\r\n   switch (state) {\r\n      case 0:\r\n         return <Badge variant=\"success light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Current\r\n         </Badge>\r\n      case 1:\r\n         return <Badge variant=\"danger light\">\r\n            <i className=\"fa fa-circle text-danger mrmr-1\"></i>\r\n            Always\r\n         </Badge>\r\n      case 2:\r\n         return <Badge variant=\"warning light\">\r\n            <i className=\"fa fa-circle text-warning mr-1\"></i>\r\n            Global\r\n         </Badge>\r\n   \r\n      default:\r\n           return <Badge variant=\"success light\">\r\n               <i className=\"fa fa-circle text-success mr-1\"></i>\r\n               Current\r\n           </Badge>\r\n\r\n   }\r\n}\r\nconst Processes = () => {\r\n\r\n    const [ processes, setProcesses ] = useState([])\r\n    const [ filteredProcesses, setFilteredProcesses ] = useState([]);\r\n    const [ currentPage, setCurrentPage ] = useState(0);\r\n    const [ byFilter, setByFilter ] = useState(100);\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [newProcesses, setNewProcesses] = useState([]);\r\n    const params = useParams();\r\n\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/api/process/${params.agentId}`)\r\n            .then(res => {\r\n                setProcesses(res.data);\r\n            });\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        axios.get(`${BASE_URL}/api/process/${params.agentId}`)\r\n            .then(res => {\r\n                setProcesses(res.data);\r\n            });\r\n    }, 5000)\r\n\r\n    useEffect(() => {\r\n\r\n        let cnt = processes.length > sort ? sort : (processes.length - currentPage * sort);\r\n        setFilteredProcesses(processes.filter(o => byFilter === 100 ? true : byFilter === 2 ? o.target === byFilter : o.target === byFilter && o.agentId === params.agentId).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [processes, currentPage, byFilter])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(processes.filter(o => byFilter === 100 ? true : byFilter === 2 ? o.target === byFilter : o.target === byFilter && o.agentId === params.agentId).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n\r\n    }, [filteredProcesses])\r\n\r\n    const onKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            setNewProcesses([...newProcesses, event.target.value]);\r\n            event.target.value = ''\r\n        }\r\n    }\r\n\r\n    const onSetProcessState = (action, process) => {\r\n        process.action = action;\r\n\r\n        axios.put(`${BASE_URL}/api/process`, process)\r\n            .then(res => {\r\n                let changedProcess = processes.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n    const onSetProcessTarget = (target, process) => {\r\n        process.target = target;\r\n\r\n        axios.put(`${BASE_URL}/api/process`, process)\r\n            .then(res => {\r\n                let changedProcess = processes.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n    const onDelete = (process) => {\r\n        axios.delete(`${BASE_URL}/api/process/${process.id}`)\r\n            .then(res => {\r\n                let changedProcess = processes.filter(p => p.id != process.id)\r\n                setProcesses(changedProcess);\r\n            });\r\n    }\r\n\r\n    const onRemove = id => {\r\n        setNewProcesses(newProcesses.filter((p, i) => i !== id))\r\n    }\r\n\r\n    const onSaveNewProcesses = () => {\r\n        let sendProcess = []\r\n        if (params.agentId === \"-1\") {\r\n            sendProcess = newProcesses.map(p => ({\r\n                Name: p,\r\n                Action: false,\r\n                Target: 2,\r\n            }))\r\n        } else {\r\n            sendProcess = newProcesses.map(p => ({\r\n                Id: 0,\r\n                Name: p,\r\n                Action: false,\r\n                Target: 1,\r\n                AgentId: params.agentId\r\n            }))\r\n        }\r\n\r\n        axios.post(`${BASE_URL}/api/process`, sendProcess)\r\n            .then(res => {\r\n                setProcesses([...processes, ...res.data]);\r\n            });\r\n    }\r\n\r\n    const byFilterLabel = id => {\r\n        switch (id) {\r\n            case 0:\r\n                return 'Current';\r\n            case 1:\r\n                return 'Always';\r\n            case 2:\r\n                return 'Global';\r\n            default:\r\n                return 'All';\r\n        }\r\n    }\r\n\r\n   const [ modalCentered, setModalCentered ] = useState(false);\r\n   \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                     <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Add\r\n                     </Button>\r\n\r\n                     <Modal className=\"fade\" show={modalCentered}>\r\n                        <Modal.Header>\r\n                           <Modal.Title>Modal title</Modal.Title>\r\n                           <Button\r\n                              onClick={() => setModalCentered(false)}\r\n                              variant=\"\"\r\n                              className=\"close\"\r\n                           >\r\n                              <span>&times;</span>\r\n                           </Button>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                           <div className=\"form-group\">\r\n                              <input\r\n                                   type=\"text\"\r\n                                   className=\"form-control input-rounded\"\r\n                                   placeholder=\"input-rounded\"\r\n                                   onKeyUp={onKeyDown}\r\n                              />\r\n                           </div>\r\n                           <Table responsive>\r\n                              <thead>\r\n                                 <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Action</th>\r\n                                 </tr>\r\n                              </thead>\r\n                               <tbody>\r\n                                   {\r\n                                       newProcesses.map((p, i) => (\r\n                                           <tr key={ i}>\r\n                                               <th>{ i+1}</th>\r\n                                               <td>{p}</td>\r\n                                               <td><Button variant=\"danger\" onClick={() => onRemove(i)}>Delete</Button></td>\r\n                                           </tr>\r\n                                           ))\r\n                                   }\r\n                              </tbody>\r\n                           </Table>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                           <Button\r\n                              onClick={() => setModalCentered(false)}\r\n                              variant=\"danger light\"\r\n                           >\r\n                              Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={onSaveNewProcesses}>Save changes</Button>\r\n                        </Modal.Footer>\r\n                     </Modal>\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Processes</h4>\r\n                {\r\n                    params.agentId !== '-1' &&\r\n                    <Dropdown className=\"dropdown mt-sm-0 mt-3\">\r\n                        <Dropdown.Toggle\r\n                            as=\"button\"\r\n                            variant=\"\"\r\n                            className=\"btn rounded border border-light dropdown-toggle\"\r\n                        >\r\n                            {byFilterLabel(byFilter)}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                            <Dropdown.Item onClick={() => setByFilter(100)}>All</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(0)}>Current</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(1)}>Always</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => setByFilter(2)}>Global</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                }\r\n            </div>\r\n            <div className=\"card-body\">\r\n               <Table responsive className=\"w-100\">\r\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                            <table id=\"example\" className=\"display w-100 dataTable\">\r\n                                <thead>\r\n                                    <tr role=\"row\">\r\n                                        <th >\r\n                                            Name\r\n                                        </th>\r\n                                        <th>\r\n                                            Status\r\n                                        </th>\r\n                                        <th>\r\n                                            Category\r\n                                        </th>\r\n                                        <th>\r\n                                            Actions\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        filteredProcesses.map((a, i) => (\r\n                                            <tr key={i}>\r\n                                                <td>\r\n                                                    {a.name}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {a.action ? 'Hide' : 'Show'}\r\n                                                </td>\r\n                                                <td className=\"text-center\">\r\n                                                    <StatusComponent state={ a.target }/>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <Dropdown>\r\n                                                        <Dropdown.Toggle\r\n                                                            variant\r\n                                                            className=\"icon-false table-dropdown\"\r\n                                                        >\r\n                                                            <svg\r\n                                                                width=\"24px\"\r\n                                                                height=\"24px\"\r\n                                                                viewBox=\"0 0 24 24\"\r\n                                                                version=\"1.1\"\r\n                                                            >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect\r\n                                                                    x=\"0\"\r\n                                                                    y=\"0\"\r\n                                                                    width=\"24\"\r\n                                                                    height=\"24\"\r\n                                                                ></rect>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"5\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"12\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                                <circle\r\n                                                                    fill=\"#000000\"\r\n                                                                    cx=\"19\"\r\n                                                                    cy=\"12\"\r\n                                                                    r=\"2\"\r\n                                                                ></circle>\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                        </Dropdown.Toggle>\r\n                                                        <Dropdown.Menu>\r\n                                                            <Dropdown.Item to=\"#\" onClick={() => onSetProcessState(false, a) } >\r\n                                                                Show\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item to=\"#\" onClick={() => onSetProcessState(true, a)} >\r\n                                                                Hide\r\n                                                            </Dropdown.Item>\r\n                                                            {\r\n                                                                params.agentId !== '-1' &&\r\n                                                                <Dropdown.Item to=\"#\" onClick={() => onSetProcessTarget(1, a)}>\r\n                                                                    Always\r\n                                                                </Dropdown.Item>\r\n                                                            }\r\n                                                            {\r\n                                                                params.agentId === '-1' &&\r\n                                                                <Dropdown.Item to=\"#\" onClick={() => onDelete(a)}>\r\n                                                                    Delete\r\n                                                                </Dropdown.Item>\r\n                                                            }\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                                       <div className=\"dataTables_info\">\r\n                                           Showing {currentPage * sort + 1} to\r\n                                           {filteredProcesses.length >\r\n                                               (currentPage + 1) * sort\r\n                                               ? filteredProcesses.length\r\n                                               : (currentPage + 1) * sort}\r\n                                           of {processes.length} entries\r\n                                       </div>\r\n                                       <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                                           <Pagination\r\n                                               className=\"pagination-primary pagination-circle\"\r\n                                               size=\"lg\"\r\n                                           >\r\n                                               <li\r\n                                                   className=\"page-item page-indicator \"\r\n                                                   onClick={() =>\r\n                                                       currentPage > 0 &&\r\n                                                       setCurrentPage(currentPage - 1)\r\n                                                   }\r\n                                               >\r\n                                                   <Link className=\"page-link\" to=\"#\">\r\n                                                       <i className=\"la la-angle-left\" />\r\n                                                   </Link>\r\n                                               </li>\r\n                                               {\r\n                                                   paggination.map((number, i) => (\r\n                                                       <Pagination.Item\r\n                                                           className={\r\n                                                               currentPage === i ? \"active\" : \"\"\r\n                                                           }\r\n                                                           onClick={() => setCurrentPage(i)}\r\n                                                           key={i}\r\n                                                       >\r\n                                                           {number}\r\n                                                       </Pagination.Item>\r\n                                                   ))\r\n                                               }\r\n                                               <li\r\n                                                   className=\"page-item page-indicator\"\r\n                                                   onClick={() =>\r\n                                                       currentPage + 1 <\r\n                                                       filteredProcesses &&\r\n                                                       setCurrentPage(currentPage + 1)\r\n                                                   }\r\n                                               >\r\n                                                   <Link className=\"page-link\" to=\"#\">\r\n                                                       <i className=\"la la-angle-right\" />\r\n                                                   </Link>\r\n                                               </li>\r\n                                           </Pagination>\r\n                                       </div>\r\n                                   </div>\r\n                         </div>\r\n               </Table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Processes;\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Agents.js",["176","177"],"import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport {  Pagination, Badge, Dropdown, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { BASE_URL } from \"../../../constance/index.js\";\r\nimport { useInterval } from \"../UseInterval.js\";\r\nimport Select from \"react-select\";\r\n\r\nconst CheckComponent = ({state}) => (\r\n   <div className=\"custom-control custom-checkbox\">\r\n      <input\r\n         type=\"checkbox\"\r\n         className=\"custom-control-input\"\r\n         id={`checkAll${state}`}\r\n         required\r\n      />\r\n      <label\r\n         className=\"custom-control-label\"\r\n         htmlFor={`checkAll${state}`}\r\n      />\r\n   </div>\r\n)\r\n\r\nconst StatusComponent = ({state}) => {\r\n   switch (state) {\r\n      case 0:\r\n         return <Badge variant=\"success light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Approve\r\n         </Badge>\r\n      case 1:\r\n           return <Badge variant=\"warning light\">\r\n               <i className=\"fa fa-circle text-warning mr-1\"></i>\r\n            Accepted\r\n         </Badge>\r\n      case 2:\r\n           return <Badge variant=\"danger light\">\r\n               <i className=\"fa fa-circle text-danger mr-1\"></i>\r\n            Rejected\r\n         </Badge>\r\n   \r\n      default:\r\n         return <Badge variant=\"success light\">\r\n            <i className=\"fa fa-circle text-success mr-1\"></i>\r\n            Approve\r\n         </Badge>\r\n   }\r\n}\r\n\r\nconst Agents = (props) => {\r\n\r\n    const [agents, setAgents] = useState([])\r\n    const [companies, setCompanies] = useState([])\r\n    const [filteredAgents, setFilteredAgents] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [byFilter, setByFilter] = useState(100);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    const [company, setCompany] = useState('');\r\n\r\n    const sort = 8;\r\n\r\n    useInterval(() => {\r\n        axios.get(`${BASE_URL}/api/companies`)\r\n            .then(res => {\r\n                setCompanies(res.data.map(c => ({ id: c.id, label: c.label, value: c.value })));\r\n            });\r\n        axios.get(`${BASE_URL}/api/agent`)\r\n            .then(res => {\r\n                console.log(res.data.map(a => {\r\n                    return a;\r\n                }))\r\n                setAgents(res.data);\r\n            });\r\n    }, 5000)\r\n   \r\n    useEffect(() => {\r\n\r\n        let cnt = agents.length > sort ? sort : (agents.length - currentPage * sort);\r\n        setFilteredAgents(agents.filter(o => byFilter === 100 ? true : o.status === byFilter).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [agents, currentPage, byFilter])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(agents.filter(o => byFilter === 100 ? true : o.status === byFilter).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n        if (paggination.length - 1 < currentPage) {\r\n            setCurrentPage(0);\r\n        }\r\n\r\n    }, [filteredAgents])\r\n\r\n    const onSetAgentState = ({ status, agent }) => {\r\n        if (status === 100) {\r\n            props.history.push(`/processes/${agent.id}`);\r\n            return;\r\n        }\r\n        agent.status = status;\r\n        axios.put(`${BASE_URL}/api/agent`, agent)\r\n            .then(res => {\r\n                let changedAgents = agents.map(a => {\r\n                    if (a.id === res.data.id) {\r\n                        return res.data;\r\n                    }\r\n                    return a;\r\n                })\r\n                setAgents(changedAgents);\r\n            });\r\n    }\r\n   \r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/api/agent`)\r\n            .then(res => {\r\n                setAgents(res.data);\r\n            });\r\n    }, [])\r\n    \r\n    const newAgent = () => {\r\n        axios.post(`${BASE_URL}/api/agent`, { companyId: company.id })\r\n            .then(res => {\r\n                setAgents([res.data, ...agents]);\r\n                axios({\r\n                    url: `${BASE_URL}/api/agent/download`,\r\n                    method: 'GET',\r\n                    responseType: 'blob', // important\r\n                })\r\n                    .then(res => {\r\n                        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n                        const link = document.createElement('a');\r\n                        link.href = url;\r\n                        link.setAttribute('download', 'archive.zip');\r\n                        document.body.appendChild(link);\r\n                        link.click();\r\n                    })\r\n            })\r\n    }\r\n\r\n    const deleteAgent = id => {\r\n        axios.delete(`${BASE_URL}/api/agent/${id}`)\r\n            .then(res => {\r\n                setAgents(agents.filter(a => a.id !== res.data.id));\r\n            })\r\n    }\r\n\r\n    const byFilterLabel = id => {\r\n        switch (id) {\r\n            case 0:\r\n                return 'Approve';\r\n            case 1:\r\n                return 'Accepted';\r\n            case 2:\r\n                return 'Rejected';\r\n            default:\r\n                return 'All';\r\n        }\r\n    }\r\n   \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                   <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Create\r\n                   </Button>\r\n\r\n                   <Modal className=\"fade\" show={modalCentered}>\r\n                       <Modal.Header>\r\n                           <Modal.Title>Modal title</Modal.Title>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"\"\r\n                               className=\"close\"\r\n                           >\r\n                               <span>&times;</span>\r\n                           </Button>\r\n                       </Modal.Header>\r\n                       <Modal.Body>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Company\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <Select\r\n                                           onChange={setCompany}\r\n                                           options={companies}\r\n                                           style={{\r\n                                               lineHeight: \"40px\",\r\n                                               color: \"#7e7e7e\",\r\n                                               paddingLeft: \" 15px\",\r\n                                           }}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n\r\n                           </div>\r\n                       </Modal.Body>\r\n                       <Modal.Footer>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"danger light\"\r\n                           >\r\n                               Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={newAgent}>Create Agent</Button>\r\n                       </Modal.Footer>\r\n                   </Modal>\r\n\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Agents</h4>\r\n                <div className=\"input-group search-area d-lg-inline-flex d-none mr-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchKey}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search here\"\r\n                        onChange={e => setSearchKey(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\">\r\n                            <svg\r\n                                width={20}\r\n                                height={20}\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M23.7871 22.7761L17.9548 16.9437C19.5193 15.145 20.4665 12.7982 20.4665 10.2333C20.4665 4.58714 15.8741 0 10.2333 0C4.58714 0 0 4.59246 0 10.2333C0 15.8741 4.59246 20.4665 10.2333 20.4665C12.7982 20.4665 15.145 19.5193 16.9437 17.9548L22.7761 23.7871C22.9144 23.9255 23.1007 24 23.2816 24C23.4625 24 23.6488 23.9308 23.7871 23.7871C24.0639 23.5104 24.0639 23.0528 23.7871 22.7761ZM1.43149 10.2333C1.43149 5.38004 5.38004 1.43681 10.2279 1.43681C15.0812 1.43681 19.0244 5.38537 19.0244 10.2333C19.0244 15.0812 15.0812 19.035 10.2279 19.035C5.38004 19.035 1.43149 15.0865 1.43149 10.2333Z\"\r\n                                    fill=\"#A4A4A4\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n               <Dropdown className=\"dropdown mt-sm-0 mt-3\">\r\n                  <Dropdown.Toggle\r\n                     as=\"button\"\r\n                     variant=\"\"\r\n                     className=\"btn rounded border border-light dropdown-toggle\"\r\n                  >\r\n                    {byFilterLabel(byFilter)}\r\n                  </Dropdown.Toggle>\r\n                    <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\">\r\n                    <Dropdown.Item onClick={ () => setByFilter(100)}>All</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setByFilter(0)}>Approve</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setByFilter(1)}>Accepted</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => setByFilter(2)}>Rejected</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n               </Dropdown>\r\n            </div>\r\n            <div className=\"card-body\">\r\n               <Table responsive className=\"w-100\">\r\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                     <table id=\"example\" className=\"display w-100 dataTable\">\r\n                        <thead>\r\n                           <tr role=\"row\">\r\n                                 <th >\r\n                                    <CheckComponent sate={0}/>\r\n                                 </th>\r\n                                 <th >\r\n                                    Liecense\r\n                                 </th>\r\n                                <th>\r\n                                    Machine ID\r\n                                 </th>\r\n                                 <th>\r\n                                    System Name\r\n                                 </th>\r\n                                 <th>\r\n                                    Windows Version\r\n                                 </th>\r\n                                 <th>\r\n                                    Created At\r\n                                 </th>\r\n                                 <th className=\"text-center\">\r\n                                    Status\r\n                                 </th>\r\n                                 <th>\r\n                                    Actions\r\n                                 </th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                filteredAgents.map(a => (\r\n                                <tr key={a.id}>\r\n                                    <td>\r\n                                        <CheckComponent state={a.id} />\r\n                                     </td>\r\n                                    <td>\r\n                                        {a.id}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.machineID}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                            {a.systemName}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.winVersion}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                            {a.createdAt}\r\n                                    </td>\r\n                                    <td className=\"text-center\">\r\n                                        <StatusComponent state={a.status} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <Dropdown>\r\n                                            <Dropdown.Toggle\r\n                                                variant\r\n                                                className=\"icon-false table-dropdown\"\r\n                                            >\r\n                                                <svg\r\n                                                    width=\"24px\"\r\n                                                    height=\"24px\"\r\n                                                    viewBox=\"0 0 24 24\"\r\n                                                    version=\"1.1\"\r\n                                                >\r\n                                                    <g\r\n                                                        stroke=\"none\"\r\n                                                        strokeWidth=\"1\"\r\n                                                        fill=\"none\"\r\n                                                        fillRule=\"evenodd\"\r\n                                                    >\r\n                                                        <rect\r\n                                                            x=\"0\"\r\n                                                            y=\"0\"\r\n                                                            width=\"24\"\r\n                                                            height=\"24\"\r\n                                                        ></rect>\r\n                                                        <circle\r\n                                                            fill=\"#000000\"\r\n                                                            cx=\"5\"\r\n                                                            cy=\"12\"\r\n                                                            r=\"2\"\r\n                                                        ></circle>\r\n                                                        <circle\r\n                                                            fill=\"#000000\"\r\n                                                            cx=\"12\"\r\n                                                            cy=\"12\"\r\n                                                            r=\"2\"\r\n                                                        ></circle>\r\n                                                        <circle\r\n                                                            fill=\"#000000\"\r\n                                                            cx=\"19\"\r\n                                                            cy=\"12\"\r\n                                                            r=\"2\"\r\n                                                        ></circle>\r\n                                                    </g>\r\n                                                </svg>\r\n                                            </Dropdown.Toggle>\r\n                                                <Dropdown.Menu>\r\n                                                    <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 1, agent: a })}>\r\n                                                    Accept\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 2, agent: a })}>\r\n                                                    Reject\r\n                                                </Dropdown.Item>\r\n                                                    <Dropdown.Item to=\"#\" onClick={() => deleteAgent(a.id)}>\r\n                                                    Delete\r\n                                                </Dropdown.Item>\r\n                                                <Dropdown.Item to=\"#\" onClick={() => onSetAgentState({ status: 100, agent: a })}>\r\n                                                    View Details\r\n                                                </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </td>\r\n                                    </tr>\r\n\r\n                                    ))\r\n                            }\r\n                            </tbody>\r\n                     </table>\r\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                        <div className=\"dataTables_info\">\r\n                            Showing {currentPage * sort + 1} to \r\n                            {filteredAgents.length >\r\n                                (currentPage + 1) * sort\r\n                                ? filteredAgents.length\r\n                                : (currentPage + 1) * sort}\r\n                            of {agents.length} entries\r\n                        </div>\r\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                           <Pagination\r\n                              className=\"pagination-primary pagination-circle\"\r\n                              size=\"lg\"\r\n                           >\r\n                              <li\r\n                                 className=\"page-item page-indicator \"\r\n                                    onClick={() =>\r\n                                        currentPage > 0 &&\r\n                                        setCurrentPage(currentPage - 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-left\" />\r\n                                 </Link>\r\n                              </li>\r\n                            {\r\n                                paggination.map((number, i) => (\r\n                                    <Pagination.Item \r\n                                        className={\r\n                                            currentPage === i ? \"active\" : \"\"\r\n                                        }\r\n                                       onClick={() => setCurrentPage(i)}\r\n                                       key={i}\r\n                                    >\r\n                                       {number}\r\n                                    </Pagination.Item>\r\n                                 ))\r\n                              }\r\n                              <li\r\n                                 className=\"page-item page-indicator\"\r\n                                    onClick={() =>\r\n                                        currentPage + 1 <\r\n                                        filteredAgents &&\r\n                                        setCurrentPage(currentPage + 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-right\" />\r\n                                 </Link>\r\n                              </li>\r\n                           </Pagination>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </Table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\nexport default Agents;\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\Dashboard\\Home.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\UseInterval.js",["178"],"﻿import { useEffect, useRef } from 'react'\r\n\r\nexport function useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n  \r\n\t// Remember the latest callback.\r\n\tuseEffect(() => {\r\n\t  savedCallback.current = callback;\r\n\t}, [callback]);\r\n  \r\n\t// Set up the interval.\r\n\tuseEffect(() => {\r\n\t  function tick() {\r\n\t\tsavedCallback.current();\r\n\t  }\r\n\t  if (delay !== null) {\r\n\t\tlet id = setInterval(tick, delay);\r\n\t\treturn () => clearInterval(id);\r\n\t  }\r\n\t}, [delay]);\r\n}","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\constance\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\index.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\Line4.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Header.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\NavHader.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\SideBar.js",["179"],"import React, { Component, useState, useEffect } from \"react\";\n\n/// Link\nimport { Link } from \"react-router-dom\";\n\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\n/// Menu\nimport MetisMenu from \"metismenujs\";\n\n///\n import drump from \"../../../images/card/drump.png\";\n\n\nclass MM extends Component {\n   componentDidMount() {\n      this.$el = this.el;\n      this.mm = new MetisMenu(this.$el);\n   }\n   componentWillUnmount() {\n      // this.mm(\"dispose\");\n      // console.log(this.mm);\n   }\n   render() {\n      return (\n         <div className=\"mm-wrapper\">\n            <ul className=\"metismenu\" ref={(el) => (this.el = el)}>\n               {this.props.children}\n            </ul>\n         </div>\n      );\n   }\n}\n\nconst SideBar = (props) => {\n\n   useEffect(() => {\n      var btn = document.querySelector(\".nav-control\");\n      var aaa = document.querySelector(\"#main-wrapper\");\n\n      function toggleFunc() {\n         return aaa.classList.toggle(\"menu-toggle\");\n      }\n\n      btn.addEventListener(\"click\", toggleFunc);   \n\n   }, []);\n\n   let path = window.location.pathname;\n   path = path.split(\"/\");\n   path = path[path.length - 1];\n\n   return (\n      <div className=\"deznav\">\n         <PerfectScrollbar className=\"deznav-scroll\">\n            <MM className=\"metismenu\" id=\"menu\">\n               <li\n                  className={`${\n                     path === '' ? \"mm-active\" : \"\"\n                  }`}\n               >\n                  <Link to=\"/\">\n                     <i className=\"flaticon-381-networking\"></i>\n                     <span className=\"nav-text\">Home</span>\n                  </Link>\n               </li>\n               <li\n                  className={`${\n                     path === 'users' ? \"mm-active\" : \"\"\n                  }`}\n               >\n                  <Link to=\"/users\">\n                     <i className=\"flaticon-381-television\"></i>\n                     <span className=\"nav-text\">Users</span>\n                  </Link>\n               </li>\n               <li\n                  className={`${\n                     path === 'companies' ? \"mm-active\" : \"\"\n                  }`}\n               >\n                  <Link to=\"/companies\">\n                     <i className=\"flaticon-381-television\"></i>\n                     <span className=\"nav-text\">Companies</span>\n                  </Link>\n               </li>\n               <li\n                  className={`${\n                     path === 'agents' ? \"mm-active\" : \"\"\n                  }`}\n               >\n                  <Link to=\"/agents\">\n                     <i className=\"flaticon-381-television\"></i>\n                     <span className=\"nav-text\">Agents</span>\n                  </Link>\n               </li>\n\n               <li\n                  className={`${\n                     path === 'gprocesses' ? \"mm-active\" : \"\"\n                  }`}\n               >\n                  <Link to=\"/processes/-1\">\n                     <i className=\"flaticon-381-layer-1\"></i>\n                     <span className=\"nav-text\">Processes</span>\n                  </Link>\n               </li>\n\n\n            </MM>\n            <div className=\"drum-box mt-5\">\n               <img src={drump} alt=\"\" />\n               <p className=\"fs-18 font-w500 mb-4\">\n                  Start Plan Your Workout\n               </p>\n               \n            </div>\n\n           \n         </PerfectScrollbar>\n      </div>\n   );\n}\n\nexport default SideBar;\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\layouts\\nav\\Logout.js",[],"D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Companies.js",["180","181","182","183","184","185"],"import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport {  Pagination, Badge, Dropdown, Button, Modal, Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { BASE_URL } from \"../../../constance/index.js\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nexport default (props) => {\r\n\r\n    const [companies, setCompanies] = useState([])\r\n    const [filteredcompanies, setFilteredcompanies] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [paggination, setPaggination] = useState([]);\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    const [domain, setDomain] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUsers, setSelectedUsers] = useState([])\r\n    const [companyName, setCompanyName] = useState('')\r\n    const sort = 8;\r\n\r\n    useEffect(() => {\r\n\r\n        let cnt = companies.length > sort ? sort : (companies.length - currentPage * sort);\r\n        setFilteredcompanies(companies.filter(o => o.domain.includes(searchKey)).slice(currentPage * sort, currentPage * sort + cnt));\r\n\r\n    }, [companies, currentPage])\r\n\r\n    useEffect(() => {\r\n        let paggination = Array(Math.ceil(companies.filter(o => o.domain.includes(searchKey)).length / sort))\r\n            .fill()\r\n            .map((_, i) => i + 1);\r\n        setPaggination(paggination);\r\n        if (paggination.length - 1 < currentPage) {\r\n            setCurrentPage(0);\r\n        }\r\n\r\n    }, [filteredcompanies])\r\n   \r\n    useEffect(() => {\r\n        axios.get(`${BASE_URL}/api/companies`)\r\n            .then(res => {\r\n                setCompanies(res.data);\r\n            });\r\n        axios.get(`${BASE_URL}/api/users`)\r\n            .then(res => {\r\n                setUsers(res.data.map(u => ({id: u.id, label: u.email, value: u.email})));\r\n            });\r\n    }, [])\r\n\r\n    const onCreateCompany = () => {\r\n        const newCompany = {\r\n            companyName,\r\n            domain,\r\n            description,\r\n            admins: selectedUsers.map(u => u.id)\r\n        }\r\n        console.log(newCompany)\r\n        axios.post(`${BASE_URL}/api/companies`, newCompany)\r\n            .then(res => {\r\n                setCompanies([...companies, res.data])\r\n            })\r\n    }\r\n\r\n    const onDeleteCompany = id => {\r\n        axios.delete(`${BASE_URL}/api/companies/${id}`)\r\n            .then(res => {\r\n                setCompanies(companies.filter(a => a.id !== res.data.id));\r\n            })\r\n    }\r\n    \r\n   return (\r\n      <Fragment>\r\n            <div className=\"row mb-3\">\r\n               <div className=\"col-md-12 text-right\">\r\n                   <Button variant=\"info btn-rounded\" onClick={() => setModalCentered(true)}>\r\n                        <span className=\"btn-icon-left text-info\">\r\n                           <i className=\"fa fa-plus color-info\" />\r\n                        </span>\r\n                        Create\r\n                   </Button>\r\n\r\n                   <Modal className=\"fade\" show={modalCentered}>\r\n                       <Modal.Header>\r\n                           <Modal.Title>Create A Company</Modal.Title>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"\"\r\n                               className=\"close\"\r\n                           >\r\n                               <span>&times;</span>\r\n                           </Button>\r\n                       </Modal.Header>\r\n                       <Modal.Body>\r\n                           <div className=\"form-group\">\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Company Name\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <input\r\n                                           type=\"text\"\r\n                                           className=\"form-control\"\r\n                                           placeholder=\"Name\"\r\n                                           onChange={e => setCompanyName(e.target.value)}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Domain\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <input\r\n                                           type=\"text\"\r\n                                           className=\"form-control\"\r\n                                           placeholder=\"Domain\"\r\n                                           onChange={e => setDomain(e.target.value)}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Admin\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <Select\r\n                                           isMulti\r\n                                           onChange={setSelectedUsers}\r\n                                           options={users}\r\n                                           style={{\r\n                                               lineHeight: \"40px\",\r\n                                               color: \"#7e7e7e\",\r\n                                               paddingLeft: \" 15px\",\r\n                                           }}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n                               <div className=\"form-group row\">\r\n                                   <label className=\"col-sm-3 col-form-label\">\r\n                                       Description\r\n                                   </label>\r\n                                   <div className=\"col-sm-9\">\r\n                                       <textarea\r\n                                           className=\"form-control\"\r\n                                           rows=\"4\"\r\n                                           onChange={e => setDescription(e.target.value)}\r\n                                       />\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </Modal.Body>\r\n                       <Modal.Footer>\r\n                           <Button\r\n                               onClick={() => setModalCentered(false)}\r\n                               variant=\"danger light\"\r\n                           >\r\n                               Close\r\n                           </Button>\r\n                           <Button variant=\"primary\" onClick={onCreateCompany}>Create Company</Button>\r\n                       </Modal.Footer>\r\n                   </Modal>\r\n\r\n\r\n               </div>\r\n            </div>\r\n         <div className=\"row\">\r\n         <div className=\"col-12\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h4 className=\"card-title\">Companies</h4>\r\n                <div className=\"input-group search-area d-lg-inline-flex d-none mr-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={searchKey}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search here\"\r\n                        onChange={e => setSearchKey(e.target.value)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <span className=\"input-group-text\">\r\n                            <svg\r\n                                width={20}\r\n                                height={20}\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    d=\"M23.7871 22.7761L17.9548 16.9437C19.5193 15.145 20.4665 12.7982 20.4665 10.2333C20.4665 4.58714 15.8741 0 10.2333 0C4.58714 0 0 4.59246 0 10.2333C0 15.8741 4.59246 20.4665 10.2333 20.4665C12.7982 20.4665 15.145 19.5193 16.9437 17.9548L22.7761 23.7871C22.9144 23.9255 23.1007 24 23.2816 24C23.4625 24 23.6488 23.9308 23.7871 23.7871C24.0639 23.5104 24.0639 23.0528 23.7871 22.7761ZM1.43149 10.2333C1.43149 5.38004 5.38004 1.43681 10.2279 1.43681C15.0812 1.43681 19.0244 5.38537 19.0244 10.2333C19.0244 15.0812 15.0812 19.035 10.2279 19.035C5.38004 19.035 1.43149 15.0865 1.43149 10.2333Z\"\r\n                                    fill=\"#A4A4A4\"\r\n                                />\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n               <Table responsive className=\"w-100\">\r\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n                     <table id=\"example\" className=\"display w-100 dataTable\">\r\n                        <thead>\r\n                           <tr role=\"row\">\r\n                                 <th >\r\n                                    Domain\r\n                                 </th>\r\n                                <th>\r\n                                    Admin\r\n                                 </th>\r\n                                 <th>\r\n                                    Agent count\r\n                                 </th>\r\n                                 <th>\r\n                                    Created At\r\n                                 </th>\r\n                                 <th>\r\n                                    Actions\r\n                                 </th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                filteredcompanies.map(a => (\r\n                                <tr key={a.id}>\r\n                                    <td>\r\n                                            {a.companyName}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.domain}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.description}\r\n                                    </td>\r\n                                    <td>\r\n                                            {a.admins.length}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link\r\n                                            to=\"#\"\r\n                                            className=\"btn btn-danger shadow btn-xs sharp\"\r\n                                            onClick={e => onDeleteCompany(a.id)}\r\n                                        >\r\n                                            <i className=\"fa fa-trash\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                    </tr>\r\n                                    ))\r\n                            }\r\n                            </tbody>\r\n                     </table>\r\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\r\n                        <div className=\"dataTables_info\">\r\n                            Showing {currentPage * sort + 1} to \r\n                            {filteredcompanies.length >\r\n                                (currentPage + 1) * sort\r\n                                ? filteredcompanies.length\r\n                                : (currentPage + 1) * sort}\r\n                            of {companies.length} entries\r\n                        </div>\r\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n                           <Pagination\r\n                              className=\"pagination-primary pagination-circle\"\r\n                              size=\"lg\"\r\n                           >\r\n                              <li\r\n                                 className=\"page-item page-indicator \"\r\n                                    onClick={() =>\r\n                                        currentPage > 0 &&\r\n                                        setCurrentPage(currentPage - 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-left\" />\r\n                                 </Link>\r\n                              </li>\r\n                            {\r\n                                paggination.map((number, i) => (\r\n                                    <Pagination.Item \r\n                                        className={\r\n                                            currentPage === i ? \"active\" : \"\"\r\n                                        }\r\n                                       onClick={() => setCurrentPage(i)}\r\n                                       key={i}\r\n                                    >\r\n                                       {number}\r\n                                    </Pagination.Item>\r\n                                 ))\r\n                              }\r\n                              <li\r\n                                 className=\"page-item page-indicator\"\r\n                                    onClick={() =>\r\n                                        currentPage + 1 <\r\n                                        filteredcompanies &&\r\n                                        setCurrentPage(currentPage + 1)\r\n                                 }\r\n                              >\r\n                                 <Link className=\"page-link\" to=\"#\">\r\n                                    <i className=\"la la-angle-right\" />\r\n                                 </Link>\r\n                              </li>\r\n                           </Pagination>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </Table>\r\n            </div>\r\n         </div>\r\n      </div>\r\n         </div>\r\n      </Fragment>\r\n   );\r\n};\r\n\r\n","D:\\Work\\ASP\\YerraPro\\YerraPro\\YerraPro\\ClientApp\\src\\jsx\\components\\table\\Users.js",["186","187","188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":24},{"ruleId":"197","severity":1,"message":"198","line":51,"column":8,"nodeType":"199","endLine":51,"endColumn":10,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"198","line":65,"column":8,"nodeType":"199","endLine":65,"endColumn":42,"suggestions":"201"},{"ruleId":"197","severity":1,"message":"202","line":73,"column":8,"nodeType":"199","endLine":73,"endColumn":27,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":115,"column":65,"nodeType":"206","messageId":"207","endLine":115,"endColumn":67},{"ruleId":"193","severity":1,"message":"208","line":1,"column":37,"nodeType":"195","messageId":"196","endLine":1,"endColumn":43},{"ruleId":"197","severity":1,"message":"209","line":94,"column":8,"nodeType":"199","endLine":94,"endColumn":24,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":1,"nodeType":"213","messageId":"207","fix":"214"},{"ruleId":"193","severity":1,"message":"215","line":1,"column":28,"nodeType":"195","messageId":"196","endLine":1,"endColumn":36},{"ruleId":"193","severity":1,"message":"208","line":1,"column":37,"nodeType":"195","messageId":"196","endLine":1,"endColumn":43},{"ruleId":"193","severity":1,"message":"216","line":2,"column":23,"nodeType":"195","messageId":"196","endLine":2,"endColumn":28},{"ruleId":"193","severity":1,"message":"217","line":2,"column":30,"nodeType":"195","messageId":"196","endLine":2,"endColumn":38},{"ruleId":"218","severity":1,"message":"219","line":9,"column":1,"nodeType":"220","endLine":314,"endColumn":3},{"ruleId":"197","severity":1,"message":"221","line":29,"column":8,"nodeType":"199","endLine":29,"endColumn":32,"suggestions":"222"},{"ruleId":"197","severity":1,"message":"223","line":40,"column":8,"nodeType":"199","endLine":40,"endColumn":27,"suggestions":"224"},{"ruleId":"218","severity":1,"message":"219","line":9,"column":1,"nodeType":"220","endLine":211,"endColumn":3},{"ruleId":"197","severity":1,"message":"225","line":31,"column":8,"nodeType":"199","endLine":31,"endColumn":28,"suggestions":"226"},{"ruleId":"197","severity":1,"message":"227","line":42,"column":8,"nodeType":"199","endLine":42,"endColumn":23,"suggestions":"228"},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'checkAutoLogin' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.agentId'. Either include it or remove the dependency array.","ArrayExpression",["231"],["232"],"React Hook useEffect has missing dependencies: 'byFilter', 'params.agentId', and 'processes'. Either include them or remove the dependency array.",["233"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'agents', 'byFilter', and 'currentPage'. Either include them or remove the dependency array.",["234"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"235","text":"236"},"'useState' is defined but never used.","'Badge' is defined but never used.","'Dropdown' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'searchKey'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredcompanies' needs the current value of 'searchKey'.",["237"],"React Hook useEffect has missing dependencies: 'companies', 'currentPage', and 'searchKey'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'searchKey'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredusers' needs the current value of 'searchKey'.",["239"],"React Hook useEffect has missing dependencies: 'currentPage', 'searchKey', and 'users'. Either include them or remove the dependency array.",["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},[-1,0],"",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [params.agentId]",{"range":"257","text":"258"},"Update the dependencies array to be: [processes, currentPage, byFilter, params.agentId]",{"range":"259","text":"260"},"Update the dependencies array to be: [byFilter, filteredProcesses, params.agentId, processes]",{"range":"261","text":"262"},"Update the dependencies array to be: [agents, byFilter, currentPage, filteredAgents]",{"range":"263","text":"264"},"Update the dependencies array to be: [companies, currentPage, searchKey]",{"range":"265","text":"266"},"Update the dependencies array to be: [companies, currentPage, filteredcompanies, searchKey]",{"range":"267","text":"268"},"Update the dependencies array to be: [users, currentPage, searchKey]",{"range":"269","text":"270"},"Update the dependencies array to be: [currentPage, filteredusers, searchKey, users]",{"range":"271","text":"272"},[1717,1719],"[params.agentId]",[2270,2304],"[processes, currentPage, byFilter, params.agentId]",[2639,2658],"[byFilter, filteredProcesses, params.agentId, processes]",[3159,3175],"[agents, byFilter, currentPage, filteredAgents]",[1257,1281],"[companies, currentPage, searchKey]",[1620,1639],"[companies, currentPage, filteredcompanies, searchKey]",[1023,1043],"[users, currentPage, searchKey]",[1411,1426],"[currentPage, filteredusers, searchKey, users]"]